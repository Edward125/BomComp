!!!!    4    0    1 1207234491   0000                                         
! Testplan for 07238-sc  Thu Apr  3 22:54:52 2008

! 07238-SC
dim BoardSet_boards_1_to_1(1:1)
dim BoardSet_boards_2_to_2(2:2)
dim BoardSet_boards_3_to_3(3:3)
dim BoardSet_boards_4_to_4(4:4)

!   AGILENT 3070 STANDARD TESTMAIN      Revision: "3070 05.30p 0603(panel)"
!   PANELIZATION VERSION
!##############################################################################
!   This "main" program sequences execution of testplan subroutines and
!   assumes that the current working directory is already set to the
!   appropriate board directory.
!   This testmain has included the code to support the following optional
!   features:
!        Data Logging for PushButton QSTATS, QSTATS-II and ART
!        Chek-Point (pin tests)
!        Boundary Scan: Interconnect Plus & ScanWorks
!        Panelized Boards
!   Once the testplan is working, you may selectively enable
!   any combination of the features by changing the 'flag' variables
!   in the subroutine "Set_Custom_Options".  Use the following command:
!         find  "!   Other"&" parameters"  ! takes you to option settings
!
!   Turn learn on and run the testplan on a known good board.  After the
!   learning run is successfully completed, the testplan is ready for
!   customization, debug and production testing.
!   Analog limits are logged by standard testmain if and only if the
!   learn flag is on.  Limits must be logged once each time they change
!   in order for PushButton Q-STATS or Q-STATS II to produce histograms.
!
!   If flash is to be programmed on this board, the testplan needs to have the
!   locations marked !flash! modified or reviewed.  Please review the flash
!   manual for full explanation. Key elements include:
!
!   full disabling of buses and upstream control lines is required for safety
!   use ID check for digital test subroutine to ensure proper part placement
!   Cycle power if required to three-state upstream devices

dim InvOn$[5], InvOff$[4]
dim Testmain_Revision$[70]
dim Batch$[12], Oper$[25], Testplan$[14], Testrev$[4], Status(0:256)
dim Board$(0:256)[14], Board_Rev$(0:256)[14], Known_Good$[1], Serial$(0:256)
dim Proc_Step$[5], Log_Path$[80], BoardSet(0:256), Log_File$(0:256)
dim BoardSet_flash(0:256)
! The following is used in the power-supply setup routine for parallel
! power supplies.  It holds masks for comparison.
dim Psgroup(1:16)
option bit 32     ! Prevents range error when comparing Psgroup with MSB set

!       INITIALIZE BREAK AND ERROR TRAPPING

on break recover Break_Trap
on error recover Error_Trap

!       INITIALIZE VARIABLES

call Initializations

!       SET UP FAILURE ACKNOWLEDGMENT
acknowledge all failures

!       MAIN LOOP FOR REPEATEDLY TESTING A BOARD
!          (executed only once if "learning")

Wait_For_Start:

Dateandtime$ = datetime$
Pass_Fail_Reported = False
Logging_Started = False
Tests_On_This_Panel = 0
print | print Place_Board_Prompt$
wait for start
if Serializing then
  print using "@"
  Panel_Serial$ = fn Get_Serial_Num$(Serial_Prompt$)
  Known_Good$ = "n"
  if Panel_Serial$ = Known_Good_Board$ then Known_Good$ = "y"
  call Map_Panel_to_Boards   ! Map panel serial number to indiv. boards
end if
if Using_Multiple_Versions and Version_Prompting = Per_Board then
  call Get_Version_Label
  if nrun = 1 or Version_Inits_Needed then
    call Do_Version_Inits
  end if
end if

! Get xout info for the panel.  If learning, all boards on the panel
! will be enabled.

if not learning then select boards on panel BoardSet(*)

!       RE-TEST AFTER PIN-TEST FAILURE

ChekPoint_Retry:

print using "@,/"
if Serializing then print Put$; Panel_Serial$
Tests_On_This_Panel = Tests_On_This_Panel + 1
if Tests_On_This_Panel > 1 then
  print Rep_Test$
  Count = 0
  for I = 1 to Number_Boards_On_Panel
    if BoardSet(I) then
      if Count mod 16 = 0 and Count <> 0 then print
      print using "4d,#"; I
      Count = Count + 1
    end if
  next I
  print
end if

!       START LOGGING FOR THIS PANEL, AND EACH BOARD

report is Report_Printer$
if Logging then call Start_Logging
Logging_Started = True  ! Also used as reporting flag

! Initialize Status array and panel flags

if Tests_On_This_Panel = 1 then
  All_Boards_Xed_Out = True
end if
for I = 1 to Number_Boards_On_Panel
  if BoardSet(I) then
    Status(I) = Passed
    if Tests_On_This_Panel = 1 then
      All_Boards_Xed_Out = False
    end if
  else
    if Tests_On_This_Panel = 1 then Status(I) = Xed_Out
  end if
next I
if All_Boards_Xed_Out then goto Cleanup

!       ACTIVATE VACUUM IN PREPARATION FOR TEST

if Tests_On_This_Panel = 1 then faon 1.5
! Warning: Reducing the value for 'faon' from the default value of 1.5
! can potentially cause testhead damage.

!       CHECK FIXTURE CONTACT, THEN
!       LEARN OR TEST (OR RE-TEST) BOARD

unpowered

! If doing Pin Test pre-test and it fails, mark those boards
! as not to be tested.

All_Failed = False
if (not learning) and Chek_Point_Mode = Pretest then
  if not fn Chek_Point_OK then
    call Update_Status (Failed_Pin_Test, All_Failed)
  end if
end if
if not All_Failed then call Test_Sections

!       IF ANY BOARD FAILED TEST, TRY TO FIX IT BY RUNNING PIN TEST

Cleanup:

Enable_Retest = False
for I = 1 to Number_Boards_On_Panel
  board number is I
  BoardSet(I) = False              ! Don't retest passing boards
  if boardfailed and Status(I) <> Failed_In_Preshorts then
    if Tests_On_This_Panel = 1 and Chek_Point_Mode = Failures then
      Enable_Retest = True
      BoardSet(I) = True
    end if
  end if
next I
if Enable_Retest then
  unpowered
  if fn Chek_Point_OK then goto ChekPoint_Retry
end if

!       REMOVE BOARD FROM TESTHEAD AND GENERATE PASS/FAIL MESSAGE
!       THEN TERMINATE LOGGING (IF ENABLED) AND REPORTING

faoff
if All_Boards_Xed_Out then
  print All_Xout$
  for I = 1 to Number_Boards_On_Panel
    board number is I
    fail device
    if Using_Graphics then
      board graphics highlight fail board I, Err
    else
      Err = True
    end if
    if Err then print "Board "; I; " failed"
    report All_Xout$
  next I
end if
if panelfailed then
  print "     **  ";Fail_Msg$;"  **"
  if not Using_Graphics then copy Fail_File$ over "/dev/tty"
else
  print "     **  ";Pass_Msg$;"  **"
  if not Using_Graphics then copy Pass_File$ over "/dev/tty"
end if
Pass_Fail_Reported = True
for I = 1 to Number_Boards_On_Panel
  board number is I
  if Status(I) <> Xed_Out then
    if boardfailed then
      if Using_Graphics then
        board graphics highlight fail board I, Err
      else
        Err = True
      end if
      if Err then print "Board "; I; " failed"
      if Status(I) = Failed_Pin_Test then
        print But$, I, " ** ";Pin_Msg$;" **"
      end if
      if learning then Status(I) = Failed_In_Learn
      if Serializing then report Serial_Nr$ & Serial$(I)
    else
      if Using_Graphics then
        board graphics highlight pass board I, Err
      end if
    end if
  end if
  if Logging and Logging_Started and Status(I) <> Xed_Out then
    ! Do 'log board end' on panel later
    log board end Status(I)
    log out Log_File$(I) & val$(I) & "-" & Dateandtime$ & System$ & th$; append
    log clear
  end if

  ! Log a test record into the panel log buffer showing which board failed
  ! (for PushButton QSTATS).
  if Logging and boardfailed and Status(I) <> Xed_Out then
    board number is Panel_Itself
    log "{@D-T|1||||Board_" & val$(I) & "}"
  end if
next I

! Now finish the log buffer for the panel
if Logging and not All_Boards_Xed_Out then
  board number is Panel_Itself
  if panelfailed then
    log board end Failed
  else
    log board end Passed
  end if
  log out Log_File$(0) & Dateandtime$ & System$ & th$; append
  log clear
end if

Eject_Ticket: image 13/

if panelfailed then
  if Using_Buffered_Reporting then
    for I = 1 to Number_Boards_On_Panel-1
      board number is I
      if boardfailed then report out
    next I
    board number is Number_Boards_On_Panel
    report using Eject_Ticket
    report out
  else
    report using Eject_Ticket
  end if
end if
report is *
for I = Panel_Itself to Number_Boards_On_Panel
  board number is I
  report clear
  clear failures
next I
Logging_Started = False

!       END PROGRAM IF LEARNING. OTHERWISE RETURN TO MAIN LOOP

if learning then
   learn off
   print | print Learning_Off_Msg$ | print Stop_Msg$
   beep
   stop
end if
goto Wait_For_Start

!       END OF MAIN LOOP
!       INTERRUPT HANDLING
! This is the normal entry for Break/Stop detection

Break_Trap:
off break
off error
print "     ";Break_Msg$
unpowered,Err
if Err then print errmlong$
if Logging and Logging_Started then
  for I = Panel_Itself to Number_Boards_On_Panel
    board number is I
    log board end Break_Code
    log out Log_File$(I) & val$(I) & "-" & Dateandtime$ & System$ & th$; append
    log clear
  next I
end if
faoff, Err
if Err then print errmlong$
goto Abort

! This is the normal entry for errors occurring in Basic statements

Error_Trap:
off error
print errmlong$
beep
SaveErrn = errn
unpowered,Err
if Err then print errmlong$

!       IF A BOARD IS PRESENT, FAIL IT
!       THEN TERMINATE LOGGING (IF ENABLED) AND REPORTING

if Logging_Started and not Pass_Fail_Reported then
  print "     **  ";Fail_Msg$;"  **"
  if not Using_Graphics then copy Fail_File$ over "/dev/tty"
  for I = 1 to Number_Boards_On_Panel
    board number is I
    if Status(I) <> Xed_Out then
      fail device
      report Board_Not_Tested$
      if Using_Graphics then
        board graphics highlight fail board I, Err
      else
        Err = True
      end if
      if Err then print "Board "; I; " failed"
      if Status(I) = Failed_Pin_Test then
        print But$, I, " ** ";Pin_Msg$;" **"
      end if
      if learning then Status(I) = Failed_In_Learn
      if Serializing then report Serial_Nr$ & Serial$(I)
    end if
  next I
  if Using_Buffered_Reporting then
    for I = 1 to Number_Boards_On_Panel-1
      board number is I
      if boardfailed then report out
    next I
    board number is Number_Boards_On_Panel
    report using Eject_Ticket
    report out
  else
    report using Eject_Ticket
  end if
  report is *, Err
  for I = 1 to Number_Boards_On_Panel
    board number is I
    report clear
  next I
end if
if Logging_Started and Logging then
  for I = Panel_Itself to Number_Boards_On_Panel
    board number is I
    log using """{@RPT~80|"",80a,""}""" ; errm$(SaveErrn)
    log board end Error_Code, SaveErrn
    log out Log_File$(I) & val$(I) & "-" & Dateandtime$ & System$ & th$; append
    log clear
  next I
end if

!       REMOVE THE BOARD FROM THE TESTHEAD

faoff, Err
if Err then print errmlong$
if learning or Err then goto Abort
on error recover Error_Trap
goto Wait_For_Start

!       ABORT PROGRAM: UNRECOVERABLE ERROR, LEARN ERROR OR STOP KEY

Abort:
off break
off error
report is *, Err
log is *, Err
beep
if (nrun=1) and not Did_First_Run_Inits then
  print No_Init_Warning$
  clear nrun
else
  if Version_Inits_Needed then
    print No_Version_Init_Warning$
    clear nrun
  end if
end if
print "     ";Stop_Msg$
beep
stop
end

!       END OF ERROR TRAPS

!       Test/Learn Sections (Subroutine)
!         [ Assumes unpowered mode. ]
! Note concerning LEARN MODE:  some sections are not truly "learned" but are
! run in learn mode for other reasons.  For example, analog tests may be run
! in learn mode in order to log limits information used by Pushbutton QSTATS,
! and preshorts/shorts are run "just in case" -- to avoid bad learns & damage.
! To keep a section from being run in learn mode, place 'if not learning then'
! just before that section and place 'end if' just after it.
!##############################################################################
sub Test_Sections
global PreshortsMsg$, ShortsMsg$, PowerMsg$, DigitalMsg$, AnalogMsg$
global DigitalFuncMsg$, AnalogPoweredMsg$, BScanIncktMsg$, BScanIntconMsg$
global Status(*), Failed_In_Preshorts, Failed_In_Shorts, Failed_In_Functional
global Failed_In_Digital, Failed_In_Power_Supplies, Failed_In_Analog
global Logging, Number_Boards_On_Panel, True, False, BoardSet(*)
global Mode$, Failed_In_BScan, Xed_Out
global TestJetMsg$, Failed_In_TestJet
global PolarityMsg$, Failed_In_Polarity_Check
global BScanPShortsMsg$
global ConnectCheckMsg$, Failed_In_ConnectCheck
global Failed_In_Flash, FlashProgMsg$, Programming
global AnalogClusterMsg$, Failed_In_Analog_Cluster
global BScanSiNailsMsg$, Failed_In_BScan_SiNails
global SW_ScanPathVerifyMsg$, Failed_In_SW_Testing
global SW_DrVerifyMsg$, SW_IrVerifyMsg$
global SW_InterconnectMsg$, SW_MemInterconnectMsg$
global SW_ClusterMsg$, SW_MemBistMsg$
global SW_ProgrammingMsg$, Failed_In_SW_Programming
global SW_FlashMsg$, Failed_In_SW_Flash
global All_Failed

call Pre_Shorts (Failed_In_Preshorts, Mode$ & PreshortsMsg$)
if All_Failed then subexit

call Shorts (Failed_In_Shorts, Mode$ & ShortsMsg$)
if All_Failed then subexit

if Logging or not learning then
  call Analog_Tests (Failed_In_Analog, Mode$ & AnalogMsg$)
  if All_Failed then subexit
end if

call TestJet (Failed_In_TestJet, Mode$ & TestJetMsg$)
if All_Failed then subexit

call Polarity_Check (Failed_In_Polarity_Check, Mode$ & PolarityMsg$)
if All_Failed then subexit

call Connect_Check (Failed_In_ConnectCheck, Mode$ & ConnectCheckMsg$)
if All_Failed then subexit

call Analog_Cluster_Tests (Failed_In_Analog_Cluster, Mode$ & AnalogClusterMsg$)
if All_Failed then subexit

powered

call Setup_Power_Supplies (Failed_In_Power_Supplies, PowerMsg$)
if All_Failed then subexit

call ScanWorks_Scan_Path_Verify_Tests (Failed_In_SW_Testing, Mode$ & SW_ScanPathVerifyMsg$)
if All_Failed then subexit

call ScanWorks_Pretest
if All_Failed then subexit

call BScan_Powered_Shorts_Tests (Failed_In_Shorts, Mode$ & BScanPShortsMsg$)
if All_Failed then subexit

call BScan_Interconnect_Tests (Failed_In_BScan, Mode$ & BScanIntconMsg$)
if All_Failed then subexit

!If you:
!       * use both ScanWorks and 3070 InterconnectPlus chain tests
! AND   * comment out any 3070 interconnect tests (e.g. duplicate coverage)
! AND   * those commented tests have unnailed nodes (possible undetected shorts)
!THEN   * Move the following BScan_Incircuit_Tests routine below the ScanWorks 
!               Interconnect_Tests call

!Reason: an interconnect test, which finds shorts, should be run on each chain prior to
!the BScan_Incircuit_Tests routine.  The connect tests give precise opens diagnostics,
!but board damage from undetected shorts could occur while they are being run. 

call BScan_Incircuit_Tests (Failed_In_BScan, Mode$ & BScanIncktMsg$)
if All_Failed then subexit

call ScanWorks_Interconnect_Tests (Failed_In_SW_Testing, Mode$ & SW_InterconnectMsg$)
if All_Failed then subexit

call BScan_Silicon_Nails_Tests (Failed_In_BScan_SiNails, Mode$ & BScanSiNailsMsg$)
if All_Failed then subexit

! If you are using Boundary-Scan and you want to cycle power,
! then uncomment the following call.
! call Reset_Board

call Digital_Tests (Failed_In_Digital, Mode$ & DigitalMsg$)
if All_Failed then subexit

call ScanWorks_Mem_Interconnect_Tests (Failed_In_SW_Testing, Mode$ & SW_MemInterconnectMsg$)
if All_Failed then subexit

call ScanWorks_Cluster_Tests (Failed_In_SW_Testing, Mode$ & SW_ClusterMsg$)
if All_Failed then subexit

call ScanWorks_Mem_BIST (Failed_In_SW_Testing, Mode$ & SW_MemBistMsg$)
if All_Failed then subexit

! If you are using Boundary-Scan and you want to cycle power,
! then uncomment the following call.
! call Reset_Board

call Functional_Tests (Failed_In_Functional, Mode$ & DigitalFuncMsg$)
if All_Failed then subexit

call Analog_Functional_Tests (Failed_In_Functional, Mode$ & AnalogPoweredMsg$)
if All_Failed then subexit

if Programming then
  if learning then subexit

  !----------------------------------------------------------------------------
  ! Only add the following powersupply setup if it is necessary to cycle power.
  ! Perhaps to get FPGAs or other ASICs to a three-state condition.
  !
  !    !flash! unpowered  ! Only if volatile logic exists upstream
  !
  !    !flash!  put any required gprelays here
  !
  !    !flash!  powered    ! if unpowered above, also use the following only if
  !                        ! digital devices aren't interferring
  !    ! call Setup_Power_Supplies (Failed_In_Power_Supplies, PowerMsg$)
  !    ! if All_Failed then subexit
  !----------------------------------------------------------------------------
  ! Add the device name to be tested in the call to the Program_Flash
  ! subroutine. If multiple devices are installed, duplicate the call line for
  ! each device.  Pass an empty string as the Message$ parameter to supress
  ! printing messages for devices 2 through N.
  !----------------------------------------------------------------------------

  ! call Program_Flash ("", Failed_In_Flash, FlashProgMsg$)
  if All_Failed then subexit

  call ScanWorks_Device_Programming (Failed_In_SW_Programming, SW_ProgrammingMsg$)
  if All_Failed then subexit

  call ScanWorks_Flash_Programming (Failed_In_SW_Flash, SW_FlashMsg$)
  if All_Failed then subexit

end if

subend

!##############################################################################
sub Update_Status (Failure_Type, All_Failed)
global True, False, Number_Boards_On_Panel, BoardSet(*), Status(*)
global Failed_Board$, Xed_Out, Failed_In_BScan, Failed_In_Shorts
global Failed_In_SW_Testing

All_Failed = True
Fail_Count = 0
for I = 1 to Number_Boards_On_Panel
  if BoardSet(I) then
    board number is I
    if boardfailed then
      call Disconnect_Power_On_Board (I)
      Status(I) = Failure_Type
      BoardSet(I) = False
      if Fail_Count = 0 then
        print tab(8); Failed_Board$
      else
        if Fail_Count mod 16 = 0 then print
      end if
      if Fail_Count mod 16 = 0 then print using "6a,#"; "      "
      print using "4d,#"; I
      Fail_Count = Fail_Count + 1
    else
      if Status(I) <> Xed_Out then All_Failed = False
    end if
  end if
next I
if Fail_Count <> 0 then print
subend

!       Pin Test Subroutines

!##############################################################################
def fn Chek_Point_OK
! This is the subroutine for forcing the testing of pin contacts.
! If this routine is called before Test_sections (Chek_Point_Mode = Pretest),
! then the internal status will be set to Passed or Failed_Pin_Test for each
! board that is not being skipped.  If this routine is called after test
! (Chek_Point_Mode = Failures), then the internal status is modified only
! if failures occur on each board that is not being skipped so as not to change
! the results of the component tests.
!
! The meaning of the function is slightly different when it is called before
! test versus after test.  If called before test, the function returns True
! if, no matter how many times it was cycled, pin test did finally pass.
! If called after test, the function returns True if pin test failed but
! passed after retry.
!
! Note: fn Pinsfailed is external to testmain.
!
global Pin_Msg2$, Number_Boards_On_Panel, BoardSet(*), Panel_Itself, Passed
global Retry_PinTest$, Recycle_Vacuum$, Status(*), True, False
global Cycle_Vacuum$, Failed_Pin_Test, Max_Times_To_Fix_Contact
global Logging, Panel_Serial$, Serial$(*), Known_Good$
global Chek_Point_Mode, Pretest, Failures, Chek_Point_Msg$

if learning then return (False)
Attempts = 0
loop
  Contact_Passed = not fn Pinsfailed (Chek_Point_Msg$)
  Fail_Count = 0
  if not Contact_Passed then
    for I = 1 to Number_Boards_On_Panel
      if BoardSet(I) then
        board number is I
        if dutfailed then
          Status(I) = Failed_Pin_Test
          if Fail_Count = 0 then
            print Pin_Msg2$
          else
            if Fail_Count mod 16 = 0 then print
          end if
          print using "4d,#"; I
          Fail_Count = Fail_Count + 1
        else
          if Chek_Point_Mode = Pretest then Status(I) = Passed
        end if
      end if
    next I
    if Fail_Count <> 0 then print
  end if
  Attempts = Attempts + 1
  exit if Contact_Passed or (Attempts > Max_Times_To_Fix_Contact)
  question Retry_PinTest$, Retry
  exit if not Retry
  if Logging and Chek_Point_Mode = Pretest then
    for I = 1 to Number_Boards_On_Panel
      board number is I
      if Status(I) = Failed_Pin_Test then log board end Failed_Pin_Test
    next I
  end if
  question Cycle_Vacuum$, Cycle
  if Cycle then
    faoff
    question Recycle_Vacuum$
    faon 1.5
! Warning: Reducing the value for 'faon' from the default value of 1.5
! can potentially cause testhead damage.
    unpowered
  end if
  if Chek_Point_Mode = Pretest then
    for I = Panel_Itself to Number_Boards_On_Panel
      board number is I
      clear failures
      if Logging and Status(I) = Failed_Pin_Test then
        log board start Serial$(I), Known_Good$, Panel_Serial$
      end if
    next I
  end if
end loop
if Chek_Point_Mode = Failures then
  Retest = False
  ! Retest failing boards that pass pin test after having failed
  for I = Panel_Itself to Number_Boards_On_Panel
    if BoardSet(I) then
      board number is I
      if (not dutfailed) and Status(I) = Failed_Pin_Test then
        Retest = True
        if Logging then
          log clear for retest
          log board end Failed_Pin_Test
        end if
        clear failures
        report clear
      else
        BoardSet(I) = False
      end if
    end if
  next I
  return (Retest)
else
  return (Contact_Passed)
end if
fnend

!       Reset_Board Subroutine

!##############################################################################
sub Reset_Board
   !---------------------------------------------------------------------------
   ! This 'pause' section is placed here to remind the test programmer
   ! that some powered tests may depend upon the TCK/TMS signals of
   ! boundary scan chains/devices being held in a stable state.
   ! When the testplan is run, the tests are properly sequenced
   ! to assure that the disabled state is set; however, board level
   ! circuitry may interfere with the persistence of the disabled state.
   ! You may need to take additional measures; for example, you may
   ! place your own pullup/down resistor in the fixture to assure a
   ! stable TMS and/or TCK, or utilize a GP relay to disable some TCK
   ! oscillator, etc.
   ! For further explanation, see the Boundary-Scan Manual for the
   ! section titled 'Maintaining Persistence of Boundary-Scan Disables'.
   !
   !---------------------------------------------------------------------------
   ! When Boundary-Scan tests are complete, you may need to produce
   ! a hard reset on the board-under-test to bring the ICs back into
   ! operational mode.  One way of doing this is to cycle power to the
   ! board using the following call:

   call Cycle_Power_On_Board ! Cycle Power to reset digital state of board
   ! call ScanWorks_Pretest    ! Configure volatile devices, if needed 

   ! Power cycling is time consuming and may not be necessary.  Some boards
   ! may not need any resetting.  Others may have a digital reset node
   ! you can toggle with a digital test to reset the board.
   !
   ! When you have evaluated the needs of this board and modified this
   ! section, remove the pause and these comments.  You should take care
   ! to document the action you have taken for future reference.
   !---------------------------------------------------------------------------
subend

!##############################################################################
! This routine maps a panel serial number to the serial numbers of each
! of the boards.  If not user-modified, it simply concatenates a numeric
! string to the serial number of the panel.
!
sub Map_Panel_to_Boards
global Panel_Serial$, Serial$(*), Number_Boards_On_Panel, Panel_Itself
Serial$(Panel_Itself) = Panel_Serial$
for I = 1 to Number_Boards_On_Panel
  Serial$(I) = Panel_Serial$ & "-" & val$(I)
next I
subend

!       Data Logging Subroutines

!##############################################################################
sub Start_Logging
global Analog_Sample_Rate, QSTATS_Mode, Histo, Panel$, Tests_On_This_Panel
global Sampling, True, False
global Proc_Step$, Batch$, Oper$, Panel_Rev$, Board_Rev$(*), Testplan$
global Testrev$, Panel_Serial$, Known_Good$, Number_Boards_On_Panel, Serial$(*)
global Board$(*), Panel_Itself, Version_Label$

Sampling = False
if learning then
  log level is all
else
  if rnd < Analog_Sample_Rate * (QSTATS_Mode = Histo) then
    log level is analog without nhls, pins
    Sampling = True
  else
    log level is indictments without nhls
  end if
end if
print "Log level: ";lli$;";  Report level: ";rli$;";  Panel type: ";Panel$
PS$ = Proc_Step$ | TR$ = Testrev$ | PR$ = Panel_Rev$ | TP$ = Testplan$
P$ = Panel$
if Tests_On_This_Panel = 1 then
  for I = Panel_Itself to Number_Boards_On_Panel
    board number is I
    if I = Panel_Itself then
      log board Panel$, PS$, Batch$, Oper$, PR$, TP$, TR$, "", "", Version_Label$
    else
      log board Board$(I), PS$, Batch$, Oper$, Board_Rev$(I), TP$, TR$, P$, PR$, Version_Label$
    end if
  next I
end if
for I = Panel_Itself to Number_Boards_On_Panel
  board number is I
  if I = Panel_Itself then
    log board start Panel_Serial$, Known_Good$
  else
    log board start Serial$(I), Known_Good$, Panel_Serial$
  end if
next I
print
subend

!##############################################################################
def fn Get_Serial_Num$(Prompt$)
global Serial_Length, Bad_Serial_Image$, Default_Serial_Number$
loop
  print using """"&Prompt$&""",#"
  Ident$=""
  input "",Ident$
  if Ident$ = "" then Ident$ = Default_Serial_Number$
  exit if Ident$ = Default_Serial_Number$
  exit if (len(Ident$) = Serial_Length) or not Serial_Length
  print using Bad_Serial_Image$; len(Ident$), Serial_Length
end loop
return (Ident$)
!return (lwc$(Ident$))
fnend

!##############################################################################
!  If the Board name contains any invalid characters, stop processing.
sub Verify_Board_Names
global Panel_Itself, Number_Boards_On_Panel
global Stop_Msg$, Bad_Board_Name$, Board$(*)

Last_Board$ = ""
Found_Bad = 0
for I = Panel_Itself to Number_Boards_On_Panel
  if Board$(I) <> Last_Board$ then
    if fn IllegalChars_In_Board_Name(Board$(I)) then
      Found_Bad = 1
      print Bad_Board_Name$  |   print "    ";Board$(I)
    end if
  end if
  Last_Board$ = Board$(I)
next I
if Found_Bad then
  print | print Stop_Msg$
  beep
  stop
end if
subend

!##############################################################################
! Check to see if the Board name contains any invalid characters, now only
! check spaces.  Return 1 if yes, and 0 if no.
def fn IllegalChars_In_Board_Name (Board$)
global True, False

if len (Board$) > 0 and pos (Board$, " ") > 0  then
  return True
else
  return False
end if
fnend

!##############################################################################
sub Create_Log_Queue
global Log_Path$, Directory_Exists, Queue_Error_Msg$, Stop_Msg$, Board$(*)
global Log_File$(*), Number_Boards_On_Panel, Panel_Itself

! Create a directory for the panel (Board$(0)) and for each unique board type
! Note! It is assumed that boards are numbered contiguously within a type
Last_Path$ = ""
for I = Panel_Itself to Number_Boards_On_Panel
  if I > 0 then Last_Path$ = Log_File$(I-1)
  Log_File$(I) = Log_Path$ & Board$(I) & "/"
  if nrun = 1 then
    if Log_File$(I) <> Last_Path$ then
      create dir Log_File$(I),Err
      Err = Err and (Err <> Directory_Exists)
      if Err then
        print Queue_Error_Msg$  |   print "    ";errm$
        print | print Stop_Msg$
        beep
        stop
      end if
    end if
  end if
next I
Log_File$(Panel_Itself) = Log_File$(Panel_Itself) & "P-"
subend

!##############################################################################
sub Setup_Logging
global Panel_Serial$, Default_Serial_Number$, Testplan$, Batch$
global Known_Good_Board$, Using_ART, Proc_Step$, Oper_Id_Prompt$
global Panel$, Oper$, Known_Good_Prompt$
global Serializing

randomize
Proc_Step$             = "btest"
Batch$                 = datetime$ ! Set to a unique identifier so that Q-STATS II can
                                   ! calculate interboard handling and system idle times
Testplan$              = Panel$
Default_Serial_Number$ = "default_SN" & th$
Panel_Serial$          = Default_Serial_Number$
Known_Good_Board$      = ""
Oper$                  = ""
if Using_ART then
  print using """"&Oper_Id_Prompt$&""",#"
  input "",Oper$
end if
if Serializing then Known_Good_Board$ = fn Get_Serial_Num$(Known_Good_Prompt$)
subend

!       Initialization Subroutines

!##############################################################################
sub Initializations
global Logging, Using_Buffered_Reporting, Report_Printer$, Using_ART
global Serializing, Logging_Started, First_Run$, Testmain_Revision$
global Did_First_Run_Inits, QSTATS_Mode
global True, False, Off, No_Histo, Histo, Pretest, Failures
global Number_Boards_On_Panel, BoardSet(*), Panel_Itself, Using_Graphics
global Version_Inits_Needed, Using_Multiple_Versions
global Per_Run, Per_Board, Version_Prompting

Testmain_Revision$="3070 05.30p 0603(panel)"
True = 1
False = 0
Off = 0
No_Histo = 1
Histo = 2
Pretest = 1
Failures = 2
Panel_Itself = 0
Per_Run = 1
Per_Board = 2
Version_Inits_Needed = False
call Set_Custom_Options
call Initialize_Board_Constants ! external to testmain
call Initialize_Constants
call Verify_Board_Names

! Initialize BoardSet to include all boards (needed by preloading of pintest)

for I = 1 to Number_Boards_On_Panel
  BoardSet(I) = True
next I
Logging_Started = False
Logging = (QSTATS_Mode <> Off) or Using_ART
if Using_ART then Serializing = True

! call Get_Board_Revision        ! to interactively set Board_Rev$

call Print_Startup_Message       ! prints out many variables' values
acknowledge all failures
learn capacitance off
if Using_Buffered_Reporting then
  buffered reporting on
else
  buffered reporting off
end if
report is Report_Printer$
printer is *
if Logging then
  call Setup_Logging
  call Create_Log_Queue
else
  log level is none
end if
if Using_ART then
  report level is all
else
  report level is report
end if
if Using_Graphics then
  ! If graphics are already running or a small monitor is in use,
  ! the 'board graphics' statement generates an error.  Ignore it.
  board graphics, Err
  board graphics highlight clear all, Err
end if
if nrun = 1 then
  print First_Run$
  load board
!'object checking on/off' statement goes here. Default is 'on'
  object checking on
end if
if Using_Multiple_Versions and Version_Prompting = Per_Run then
  call Get_Version_Label
end if
if nrun = 1 or Version_Inits_Needed then
  call Do_Version_Inits
  Did_First_Run_Inits=True
end if
subend

!##############################################################################
sub Print_Startup_Message
global Panel$, Panel_Rev$, Using_ART, QSTATS_Mode, Histo
global Analog_Sample_Rate, Chek_Point_Mode, Failures
global Report_Printer$, Using_Buffered_Reporting, Testmain_Revision$
global Serializing, Serial_Length, Using_Graphics

print using "@,2/"
print "BOARD TYPE"
print "  Name:     ";Panel$
print "  Revision: ";Panel_Rev$
print "AGILENT 3070 TESTMAIN"
print "  Report Printer: ";Report_Printer$
print "  Revision:       ";Testmain_Revision$
!   Build list of options to be printed
!     O1$ is first line, O2$ is second line
O1$ =  "  Options: "
if Using_ART then O1$=O1$&" PR+"
if QSTATS_Mode then O1$=O1$&" QSTATS"
if Chek_Point_Mode then
  O1$=O1$&" Chek-Point"
  if Chek_Point_Mode = Failures then
    O1$=O1$&"-Failures"
  else
    O1$=O1$&"-Pretest"
  end if
end if
if Using_Graphics then O1$ = O1$ & " Graphics"
if (O1$="  Options: ") then
  O2$=O1$
else
  print O1$
  O2$= "           "
end if
if Serializing then O2$=O2$&" Serializing("&val$(Serial_Length)&")"
if learning then O2$=O2$&" LEARNING"
if Using_Buffered_Reporting then O2$=O2$&" Buffered-Reporting"
if QSTATS_Mode = Histo then
  O2$=O2$&" Histograms("&val$(Analog_Sample_Rate)&")"
end if
if not (O2$ = "           ") then print O2$
print using "3/"
subend

!##############################################################################
sub Get_Board_Revision
! NOTE: If Board revs are different from panel rev, modify this routine!
global Panel_Rev$, Panel_Rev_Prompt$, Board_Rev$(*), Number_Boards_On_Panel
global Panel_Itself

if Panel_Rev$ = "" then
  print using """"&Panel_Rev_Prompt$&""",#"
  input "",Panel_Rev$
  for I = Panel_Itself to Number_Boards_On_Panel
    Board_Rev$(I) = Panel_Rev$
  next I
end if
subend

!##############################################################################
sub Do_Version_Inits
global Version_Inits_Needed, Chek_Point_Mode, True, False, Off

unpowered
faoff
call Characterize                ! external to testmain
if Chek_Point_Mode <> Off then   ! preload pins into testhead memory
  Log_Level_Reset = False
  if lli$ = "all" then
    log level is none            ! turn off digital datalogging
    Log_Level_Reset = True       ! for 'ignore all failures'
  end if
  ignore all failures
  Err = fn Pinsfailed ("")       ! external to testmain
  acknowledge all failures
  if Log_Level_Reset = True then log level is all  ! reset datalogging
end if
Version_Inits_Needed = False
subend

!##############################################################################
sub Get_Version_Label
global Version_Label$, Version_Prompt$, True, False
global Version_Inits_Needed

Old_Version$ = bvi$
Version_Inits_Needed = True
loop
  Version_Label$ = ""
  print using """" & Version_Prompt$ & """,#"
  input "", Version_Label$
  if Version_Label$ = "" or Version_Label$ = "*" then
    board version is *, Err
  else
    board version is Version_Label$, Err
  end if
  exit if not Err
  print errmlong$
end loop
if bvi$ = Old_Version$ then
  Version_Inits_Needed = False
end if
subend

!##############################################################################
sub Initialize_Constants
global PreshortsMsg$, ShortsMsg$, PowerMsg$, DigitalMsg$, AnalogMsg$
global DigitalFuncMsg$, AnalogPoweredMsg$, Chek_Point_Msg$
global Break_Detected, Mode$, Board_Not_Tested$
global True, False, InvOn$, InvOff$, First_Run$, Panel_Rev_Prompt$
global Pass_Msg$, Fail_Msg$, Pass_File$, Fail_File$, Stop_Msg$, Break_Msg$
global No_Init_Warning$, Rep_Test$, Place_Board_Prompt$, Learning_Off_Msg$
global Failed_In_Learn, Failed_Pin_Test, Failed_In_Preshorts, Failed_In_Shorts
global Failed_In_Analog, Failed_In_Power_Supplies, Failed_In_Digital
global Failed_In_Functional, Failed_In_BScan, Passed, Failed, Xed_Out
global Directory_Exists, Log_Path$, System$, Queue_Error_Msg$
global Break_Code, Error_Code
global But$, Put$, Serial_Prompt$, Bad_Serial_Image$, Oper_Id_Prompt$
global Known_Good_Prompt$, Serial_Nr$, Failed_Board$
global Retry_PinTest$, Cycle_Vacuum$, Recycle_Vacuum$
global Pin_Msg$, Pin_Msg2$, Max_Times_To_Fix_Contact
global BScanIntconMsg$, BScanIncktMsg$, All_Xout$
global TestJetMsg$, Failed_In_TestJet
global PolarityMsg$, Failed_In_Polarity_Check
global BScanPShortsMsg$, No_Version_Init_Warning$
global Version_Label$, Version_Prompt$
global ConnectCheckMsg$, Failed_In_ConnectCheck
global Failed_In_Flash, FlashProgMsg$
global AnalogClusterMsg$, Failed_In_Analog_Cluster
global BScanSiNailsMsg$, Failed_In_BScan_SiNails
global SW_ScanPathVerifyMsg$, Failed_In_SW_Testing
global SW_DrVerifyMsg$, SW_IrVerifyMsg$
global SW_InterconnectMsg$, SW_MemInterconnectMsg$
global SW_ClusterMsg$, SW_MemBistMsg$
global SW_ProgrammingMsg$, Failed_In_SW_Programming
global SW_FlashMsg$, Failed_In_SW_Flash
global Bad_Board_Name$

Break_Detected           = False
InvOn$                   = chr$(27)&"&dB"&chr$(7)  ! chr$(7) rings bell
InvOff$                  = chr$(27)&"&d@"
Passed                   = 0
Failed                   = 1
Failed_Pin_Test          = 2
Failed_In_Learn          = 3
Failed_In_Shorts         = 4
Failed_In_Analog         = 6
Failed_In_Power_Supplies = 7
Failed_In_Digital        = 8
Failed_In_Functional     = 9
Failed_In_Preshorts      = 10
! Status codes 11, 12 reserved for use by EFS
Xed_Out                  = 13     ! This status is maintained but not logged
Failed_In_BScan          = 8      ! Equate to Failed_In_Digital
Failed_In_TestJet        = 14
Failed_In_Polarity_Check = 15
Failed_In_ConnectCheck   = 16
Failed_In_Analog_Cluster = 17
Failed_In_Flash          = 18
Failed_In_BScan_SiNails  = 19
Failed_In_SW_Testing     = 8      ! Equate to Failed_In_Digital
Failed_In_SW_Programming = 20
Failed_In_SW_Flash       = 21
Error_Code               = 80
Break_Code               = 82
Directory_Exists         = 100312
Log_Path$                = btgetenv$("AGILENT3070_ROOT")&"/qm/logdata/testerq/"
enter "uname -n |";System$              ! gets hostname (without domain)
Max_Times_To_Fix_Contact = 4            ! MUST BE >= 1
Pin_Msg$                 = "FIXTURE CONTACT PROBLEM"
Pin_Msg2$                = "FIXTURE CONTACT PROBLEM ON FOLLOWING BOARDS:"
O$                       = InvOn$&"Press YES"&InvOff$
O$                       = O$&" to retry Pins Test, "&InvOn$&"NO"&InvOff$
Retry_PinTest$           = O$&" to continue."
O$                       = InvOn$&"Press YES"&InvOff$&" to cycle vacuum, "
Cycle_Vacuum$            = O$&InvOn$&"NO"&InvOff$&" Otherwise."
O$                       = InvOn$&"Press YES"&InvOff$
Recycle_Vacuum$          = O$&" to turn vacuum on and continue testing."
Queue_Error_Msg$         = "Cannot create directory to queue up log data.  Error is:"
But$                     = "Board Under Test: "
Put$                     = "Panel Under Test: "
Serial_Prompt$           = InvOn$&"Enter"&InvOff$&" Panel Identifier: "
O$                       = "/,""Identifier has wrong length ("",dd,""), must be "
Bad_Serial_Image$        = O$&""",dd,""."",/"
Oper_Id_Prompt$          = InvOn$&"Enter"&InvOff$&" Operator Identifier: "
Known_Good_Prompt$       = InvOn$&"Enter"&InvOff$&" Verification Board Identifier: "
Rep_Test$                = "Repeating test of the following boards: "
First_Run$               = "Please stand by -- doing first-run initializations"
No_Init_Warning$         = "** WARNING: FIRST RUN INITIALIZATIONS NOT COMPLETED --"
No_Init_Warning$         = No_Init_Warning$ & " CLEARING NRUN **"
O$                       = "** WARNING: VERSION CHANGE INITIALIZATIONS NOT"
No_Version_Init_Warning$ = O$ & " COMPLETED -- CLEARING NRUN **"
Pass_File$               = btgetenv$("AGILENT3070_ROOT")&"/util/pass"
Fail_File$               = btgetenv$("AGILENT3070_ROOT")&"/util/fail"
Board_Not_Tested$        = "Board not fully tested."
Pass_Msg$                = "P A N E L   P A S S E D"
Fail_Msg$                = "P A N E L   F A I L E D"
Stop_Msg$                = "P R O G R A M   S T O P P E D"
Break_Msg$               = "Break/Stop detected."
Place_Board_Prompt$      = "Place panel on fixture and "&InvOn$&"press START"
Panel_Rev_Prompt$        = InvOn$&"Enter"&InvOff$&" Panel Revision: "
Learning_Off_Msg$        = "Learning turned off"
if learning then
  Mode$                  = "Learning "
else
  Mode$                  = "Testing "
end if
PreshortsMsg$            = "Preshorts"
ShortsMsg$               = "Shorts"
PowerMsg$                = "Setting Up Power Supplies"
DigitalMsg$              = "Digital Incircuit"
AnalogMsg$               = "Analog Unpowered"
AnalogClusterMsg$        = "Analog Cluster"
TestJetMsg$              = "TestJet"
PolarityMsg$             = "Polarity Check"
ConnectCheckMsg$         = "Connect Check"
DigitalFuncMsg$          = "Digital Functional"
AnalogPoweredMsg$        = "Analog Powered and Mixed"
BScanIntconMsg$          = "Boundary Scan Interconnect"
BScanIncktMsg$           = "Boundary Scan Incircuit"
BScanPShortsMsg$         = "Boundary Scan Powered Shorts"
BScanSiNailsMsg$         = "Boundary Scan Silicon Nails"
FlashProgMsg$            = "Programming Flash"
SW_ScanPathVerifyMsg$    = "Scan Path Verify with ScanWorks"
SW_DrVerifyMsg$          = "DR Verify with ScanWorks"
SW_IrVerifyMsg$          = "IR Verify with ScanWorks"
SW_InterconnectMsg$      = "Interconnect with ScanWorks"
SW_MemInterconnectMsg$   = "Memory Interconnect with ScanWorks"
SW_ClusterMsg$           = "Cluster with ScanWorks"
SW_MemBistMsg$           = "Memory BIST with ScanWorks"
SW_ProgrammingMsg$       = "Programming Devices with ScanWorks"
SW_FlashMsg$             = "Programming Flash with ScanWorks"
Serial_Nr$               = "Serial #: "
All_Xout$                = "No boards selected; panel has FAILED."
Chek_Point_Msg$          = "Testing Pin Contact"
O$                       = "Further testing on this panel is suspended "
Failed_Board$            = O$&"due to failures on boards: "
Version_Label$           = ""
Version_Prompt$          = InvOn$&"Enter"&InvOff$&" Version Label: "
Bad_Board_Name$          = "Board name contains space, cannot proceed:"
subend

!##############################################################################
sub Set_Custom_Options
!  All variables likely to need to be changed are initialized here.
!  The Usage flag(s) can be set True or False to selectively enable or
!  disable the code needed for each indicated subsystem or feature.
global Using_ART, QSTATS_Mode, Testrev$
global Analog_Sample_Rate
global Serializing, Serial_Length
global Chek_Point_Mode, Using_Graphics
global Report_Printer$, True, False, Using_Buffered_Reporting
global Off, Pretest, Failures, No_Histo, Histo
global Per_Run, Per_Board, Version_Prompting
global Programming

!   Usage flag(s)

QSTATS_Mode               = Off         ! Choose {Off, No_Histo, Histo}
Chek_Point_Mode           = Failures    ! Choose {Off, Pretest, Failures}
Using_ART                 = False       ! Agilent Repair Tool.
Serializing               = False       ! Will get set True if Using_ART.
Using_Buffered_Reporting  = True        ! Report failures during board handling
Using_Graphics            = True        ! Will get set False if SimPlate fxt.
Programming               = False       ! Execute Flash and device programming.

!   Other parameters

Report_Printer$           = btgetenv$("RPR"&th$) ! Final report destination
!Report_Printer$           = "/dev/tty"  ! Send reports to the screen
Testrev$                  = "RevA"      ! Update this faithfully
Analog_Sample_Rate        = .10         ! Meaningful if QSTATS_Mode = Histo
Serial_Length             = 28          ! Board Id Length (0 = no checking)
Version_Prompting         = Per_Board   ! Choose {Per_Board, Per_Run}
                                        ! Used only on multiple version board
subend

!##############################################################################
sub Cleanup_Flash
global Logging, Report_level$

if Report_level$ = "all" then report level is all
if Report_level$ = "none" then report level is none
if Report_level$ = "log" then report level is log
if Report_level$ = "report" then report level is report
if Logging then
  call Set_Log_Level
end if
subend

!       Data Logging Subroutines

!##############################################################################
sub Set_Log_Level
global Sampling
if learning then
  log level is all
else
  if Sampling then
    log level is analog without nhls, pins
  else
    log level is indictments without nhls
  end if
end if
subend

!                          END OF TESTMAIN
!##############################################################################

sub Initialize_Board_Constants
global Panel$,Panel_Rev$
global Board$(*),Board_Rev$(*),Number_Boards_On_Panel
global Using_Multiple_Versions, True, False
global Using_AwareTest

   Number_Boards_On_Panel = 4
   Panel$ = "07238-sc"
   Panel_Rev$ = ""
   Board$(0) = Panel$
   Board_Rev$(0) = Panel_Rev$
   for Board_Num = 1 to 1
      Board$(Board_Num) = "07238-sc"
      Board_Rev$(Board_Num) = ""
   next Board_Num
   for Board_Num = 2 to 2
      Board$(Board_Num) = "07608-sc"
      Board_Rev$(Board_Num) = ""
   next Board_Num
   for Board_Num = 3 to 3
      Board$(Board_Num) = "07610-sc"
      Board_Rev$(Board_Num) = ""
   next Board_Num
   for Board_Num = 4 to 4
      Board$(Board_Num) = "07611-sc"
      Board_Rev$(Board_Num) = ""
   next Board_Num

! 'vacuum well' statement goes here (if required)
   vacuum well a is 2,3
   Using_Multiple_Versions = False
   Using_AwareTest = False
subend

sub Panel_Initialize_BoardSet(State)
global BoardSet(*)
global Number_Boards_On_Panel

   for Board_Num = 1 to Number_Boards_On_Panel
      BoardSet(Board_Num) = State
   next Board_Num
subend

sub Panel_Enable_Boards
global BoardSet(*)
global BoardSet_flash(*)
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!TPW: This subroutine is used by debug and is also provided for
!TPW: use in custom testplans.
   for Board_Num = 1 to 1
      BoardSet_boards_1_to_1(Board_Num) = BoardSet(Board_Num)
      BoardSet_flash(Board_Num) = BoardSet(Board_Num)
   next Board_Num
   for Board_Num = 2 to 2
      BoardSet_boards_2_to_2(Board_Num) = BoardSet(Board_Num)
      BoardSet_flash(Board_Num) = BoardSet(Board_Num)
   next Board_Num
   for Board_Num = 3 to 3
      BoardSet_boards_3_to_3(Board_Num) = BoardSet(Board_Num)
      BoardSet_flash(Board_Num) = BoardSet(Board_Num)
   next Board_Num
   for Board_Num = 4 to 4
      BoardSet_boards_4_to_4(Board_Num) = BoardSet(Board_Num)
      BoardSet_flash(Board_Num) = BoardSet(Board_Num)
   next Board_Num
subend

sub Panel_Disable_Boards
global Number_Boards_On_Panel

!TPW: This subroutine is supplied for use in custom testplans.
!TPW: Note that BoardSet(*) is not modified - use this only in
!TPW: test subroutines. BoardSet(*) will be modified in the
!TPW: testmain after returning from this subroutine.
   for Board_Num = 1 to Number_Boards_On_Panel
      board number is Board_Num
      if boardfailed then call Panel_Disable_Single_Board(Board_Num)
   next Board_Num
subend

sub Panel_Disable_Single_Board(Board_Num)
global BoardSet_flash(*)
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!TPW: This subroutine is supplied for use in custom testplans.
   if (Board_Num >= 1) and (Board_Num <= 1) then
      BoardSet_boards_1_to_1(Board_Num) = 0
   end if
   if (Board_Num >= 2) and (Board_Num <= 2) then
      BoardSet_boards_2_to_2(Board_Num) = 0
   end if
   if (Board_Num >= 3) and (Board_Num <= 3) then
      BoardSet_boards_3_to_3(Board_Num) = 0
   end if
   if (Board_Num >= 4) and (Board_Num <= 4) then
      BoardSet_boards_4_to_4(Board_Num) = 0
   end if
subend

sub Flash_Enable_Boards
global BoardSet_flash(*)
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!TPW: This subroutine is used by flash and is also provided for
!TPW: use in custom testplans.
  for Board_Num = 1 to 1
    BoardSet_boards_1_to_1(Board_Num) = BoardSet_flash(Board_Num)
  next Board_Num
  for Board_Num = 2 to 2
    BoardSet_boards_2_to_2(Board_Num) = BoardSet_flash(Board_Num)
  next Board_Num
  for Board_Num = 3 to 3
    BoardSet_boards_3_to_3(Board_Num) = BoardSet_flash(Board_Num)
  next Board_Num
  for Board_Num = 4 to 4
    BoardSet_boards_4_to_4(Board_Num) = BoardSet_flash(Board_Num)
  next Board_Num
subend

sub Flash_Disable_Single_Board(Board_Num)
global BoardSet_flash(*)
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!TPW: This subroutine is supplied for use in custom testplans.
  if (Board_Num >= 1) and (Board_Num <= 1) then
    BoardSet_boards_1_to_1(Board_Num) = 0
    BoardSet_flash(Board_Num) = 0
  end if
  if (Board_Num >= 2) and (Board_Num <= 2) then
    BoardSet_boards_2_to_2(Board_Num) = 0
    BoardSet_flash(Board_Num) = 0
  end if
  if (Board_Num >= 3) and (Board_Num <= 3) then
    BoardSet_boards_3_to_3(Board_Num) = 0
    BoardSet_flash(Board_Num) = 0
  end if
  if (Board_Num >= 4) and (Board_Num <= 4) then
    BoardSet_boards_4_to_4(Board_Num) = 0
    BoardSet_flash(Board_Num) = 0
  end if
subend

sub Characterize
global All_Failed, Failed_In_Learn
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

   call Panel_Enable_Boards
   learn capacitance on
   test "analog/c49" on boards BoardSet_boards_1_to_1(*)
   test "analog/c328" on boards BoardSet_boards_1_to_1(*)
   test "analog/c461" on boards BoardSet_boards_1_to_1(*)
   test "analog/c477" on boards BoardSet_boards_1_to_1(*)
   test "analog/c234" on boards BoardSet_boards_1_to_1(*)
   test "analog/c422" on boards BoardSet_boards_1_to_1(*)
   test "analog/c453" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9410" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9411" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9412" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9413" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec12" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec13" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec14" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc69" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc72" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc513" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc516" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c174" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c181" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c197" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c199" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c217" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c221" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c176" on boards BoardSet_boards_1_to_1(*)
   test "analog/c184" on boards BoardSet_boards_1_to_1(*)
   test "analog/c720" on boards BoardSet_boards_1_to_1(*)
   test "analog/c187" on boards BoardSet_boards_1_to_1(*)
   test "analog/c358" on boards BoardSet_boards_1_to_1(*)
   test "analog/c359" on boards BoardSet_boards_1_to_1(*)
   test "analog/c207" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c651" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c657" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c722" on boards BoardSet_boards_1_to_1(*)
   test "analog/c261" on boards BoardSet_boards_1_to_1(*)
   test "analog/c262" on boards BoardSet_boards_1_to_1(*)
   test "analog/c361" on boards BoardSet_boards_1_to_1(*)
   test "analog/c362" on boards BoardSet_boards_1_to_1(*)
   test "analog/c364" on boards BoardSet_boards_1_to_1(*)
   test "analog/c365" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc779" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc100707" on boards BoardSet_boards_1_to_1(*)
   test "analog/c375" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c662" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c9387" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9409" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc512" on boards BoardSet_boards_1_to_1(*)
   test "analog/c654" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c419" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c432" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c445" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/pc268" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc541" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc587" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc462" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc468" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc469" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu2%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu4%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu8%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu29%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu31%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu44%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu55%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu56%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu57%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu58%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu61%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu63%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu70%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu71%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu84%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu85%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/u16%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/u38%c1" on boards BoardSet_boards_1_to_1(*)
!   test "analog/u39%c1" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/ec1" on boards BoardSet_boards_2_to_2(*)
!   test "analog/ec8" on boards BoardSet_boards_2_to_2(*)  ! test commented in testorder
!   test "analog/ec9" on boards BoardSet_boards_2_to_2(*)  ! test commented in testorder
   test "analog/ec10" on boards BoardSet_boards_2_to_2(*)
   test "analog/ec11" on boards BoardSet_boards_2_to_2(*)
   test "analog/c28" on boards BoardSet_boards_4_to_4(*)
   test "analog/c29" on boards BoardSet_boards_4_to_4(*)
   test "analog/c30" on boards BoardSet_boards_4_to_4(*)
   test "analog/c31" on boards BoardSet_boards_4_to_4(*)
   test "analog/c32" on boards BoardSet_boards_4_to_4(*)
   test "analog/c33" on boards BoardSet_boards_4_to_4(*)
   test "analog/c34" on boards BoardSet_boards_4_to_4(*)
   test "analog/c35" on boards BoardSet_boards_4_to_4(*)
   learn capacitance off
   call Update_Status (Failed_In_Learn, All_Failed)
subend

sub Pre_Shorts (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

   if Message$ <> "" then  print tab(5);Message$
   call Panel_Enable_Boards
   test "analog/c3" on boards BoardSet_boards_1_to_1(*)
   test "analog/c4" on boards BoardSet_boards_1_to_1(*)
   test "analog/c5" on boards BoardSet_boards_1_to_1(*)
   test "analog/c6" on boards BoardSet_boards_1_to_1(*)
   test "analog/c7" on boards BoardSet_boards_1_to_1(*)
   test "analog/c8" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9" on boards BoardSet_boards_1_to_1(*)
   test "analog/c10" on boards BoardSet_boards_1_to_1(*)
   test "analog/c55" on boards BoardSet_boards_1_to_1(*)
   test "analog/c59" on boards BoardSet_boards_1_to_1(*)
   test "analog/c80" on boards BoardSet_boards_1_to_1(*)
   test "analog/c91" on boards BoardSet_boards_1_to_1(*)
   test "analog/c116" on boards BoardSet_boards_1_to_1(*)
   test "analog/c138" on boards BoardSet_boards_1_to_1(*)
   test "analog/c170" on boards BoardSet_boards_1_to_1(*)
   test "analog/c190" on boards BoardSet_boards_1_to_1(*)
   test "analog/c206" on boards BoardSet_boards_1_to_1(*)
   test "analog/c212" on boards BoardSet_boards_1_to_1(*)
   test "analog/c213" on boards BoardSet_boards_1_to_1(*)
   test "analog/c239" on boards BoardSet_boards_1_to_1(*)
   test "analog/c244" on boards BoardSet_boards_1_to_1(*)
   test "analog/c249" on boards BoardSet_boards_1_to_1(*)
   test "analog/c257" on boards BoardSet_boards_1_to_1(*)
   test "analog/c274" on boards BoardSet_boards_1_to_1(*)
   test "analog/c291" on boards BoardSet_boards_1_to_1(*)
   test "analog/c303" on boards BoardSet_boards_1_to_1(*)
   test "analog/c314" on boards BoardSet_boards_1_to_1(*)
   test "analog/c318" on boards BoardSet_boards_1_to_1(*)
   test "analog/c323" on boards BoardSet_boards_1_to_1(*)
   test "analog/c329" on boards BoardSet_boards_1_to_1(*)
   test "analog/c331" on boards BoardSet_boards_1_to_1(*)
   test "analog/c334" on boards BoardSet_boards_1_to_1(*)
   test "analog/c340" on boards BoardSet_boards_1_to_1(*)
   test "analog/c343" on boards BoardSet_boards_1_to_1(*)
   test "analog/c404" on boards BoardSet_boards_1_to_1(*)
   test "analog/c435" on boards BoardSet_boards_1_to_1(*)
   test "analog/c436" on boards BoardSet_boards_1_to_1(*)
   test "analog/c452" on boards BoardSet_boards_1_to_1(*)
   test "analog/c455" on boards BoardSet_boards_1_to_1(*)
   test "analog/c456" on boards BoardSet_boards_1_to_1(*)
   test "analog/c462" on boards BoardSet_boards_1_to_1(*)
   test "analog/c466" on boards BoardSet_boards_1_to_1(*)
   test "analog/c480" on boards BoardSet_boards_1_to_1(*)
   test "analog/c499" on boards BoardSet_boards_1_to_1(*)
   test "analog/c528" on boards BoardSet_boards_1_to_1(*)
   test "analog/c543" on boards BoardSet_boards_1_to_1(*)
   test "analog/c550" on boards BoardSet_boards_1_to_1(*)
   test "analog/c592" on boards BoardSet_boards_1_to_1(*)
   test "analog/c624" on boards BoardSet_boards_1_to_1(*)
   test "analog/c627" on boards BoardSet_boards_1_to_1(*)
   test "analog/c639" on boards BoardSet_boards_1_to_1(*)
   test "analog/c640" on boards BoardSet_boards_1_to_1(*)
   test "analog/c641" on boards BoardSet_boards_1_to_1(*)
   test "analog/c649" on boards BoardSet_boards_1_to_1(*)
   test "analog/c653" on boards BoardSet_boards_1_to_1(*)
   test "analog/c670" on boards BoardSet_boards_1_to_1(*)
   test "analog/c679" on boards BoardSet_boards_1_to_1(*)
   test "analog/c683" on boards BoardSet_boards_1_to_1(*)
   test "analog/c684" on boards BoardSet_boards_1_to_1(*)
   test "analog/c693" on boards BoardSet_boards_1_to_1(*)
   test "analog/c695" on boards BoardSet_boards_1_to_1(*)
   test "analog/c702" on boards BoardSet_boards_1_to_1(*)
   test "analog/c719" on boards BoardSet_boards_1_to_1(*)
   test "analog/c732" on boards BoardSet_boards_1_to_1(*)
   test "analog/c735" on boards BoardSet_boards_1_to_1(*)
   test "analog/c762" on boards BoardSet_boards_1_to_1(*)
   test "analog/c765" on boards BoardSet_boards_1_to_1(*)
   test "analog/c774" on boards BoardSet_boards_1_to_1(*)
   test "analog/c794" on boards BoardSet_boards_1_to_1(*)
   test "analog/c6387" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9279" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9414" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9416" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec1" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec5" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec6" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec7" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec8" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec9" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec10" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec11" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec15" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec16" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec18" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec19" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec20" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec21" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec22" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec24" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec26" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec28" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec29" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec30" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec31" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec32" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec33" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec34" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec35" on boards BoardSet_boards_1_to_1(*)
   test "analog/fuse1" on boards BoardSet_boards_1_to_1(*)
   test "analog/fuse2" on boards BoardSet_boards_1_to_1(*)
   test "analog/g9" on boards BoardSet_boards_1_to_1(*)
   test "analog/g10" on boards BoardSet_boards_1_to_1(*)
   test "analog/l5" on boards BoardSet_boards_1_to_1(*)
   test "analog/l7" on boards BoardSet_boards_1_to_1(*)
   test "analog/l15" on boards BoardSet_boards_1_to_1(*)
   test "analog/l23" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc26" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc28" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc30" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc47" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc49" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc407" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc430" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc467" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc470" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc471" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc483" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc486" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc487" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc507" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc518" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc531" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc539" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc591" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc743" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc746" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc754" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc769" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc772" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc786" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc9410" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg8" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg11" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg12" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg13" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg15" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg21" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg26" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg31" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg32" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg34" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg39" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg43" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg50" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg51" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg63" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg64" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg65" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg71" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg72" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg76" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg79" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg82" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg89" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg90" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg91" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg92" on boards BoardSet_boards_1_to_1(*)
   test "analog/pg93" on boards BoardSet_boards_1_to_1(*)
   test "analog/pl27" on boards BoardSet_boards_1_to_1(*)
   test "analog/pl33" on boards BoardSet_boards_1_to_1(*)
   test "analog/pl34" on boards BoardSet_boards_1_to_1(*)
   test "analog/pl35" on boards BoardSet_boards_1_to_1(*)
   test "analog/pl44" on boards BoardSet_boards_1_to_1(*)
   test "analog/pl46" on boards BoardSet_boards_1_to_1(*)
   test "analog/pl50" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr20" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr26" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr33" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr58" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr70" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr71" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr73" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr347" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr349" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr377" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr387" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr410" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr415" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr428" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr430" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr448" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr461" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr465" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr504" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr538" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr659" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr664" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr665" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr678" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr681" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr682" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr696" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr8140" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr81411" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr100506" on boards BoardSet_boards_1_to_1(*)
   test "analog/r24" on boards BoardSet_boards_1_to_1(*)
   test "analog/r43" on boards BoardSet_boards_1_to_1(*)
   test "analog/r48" on boards BoardSet_boards_1_to_1(*)
   test "analog/r51" on boards BoardSet_boards_1_to_1(*)
   test "analog/r55" on boards BoardSet_boards_1_to_1(*)
   test "analog/r56" on boards BoardSet_boards_1_to_1(*)
   test "analog/r57" on boards BoardSet_boards_1_to_1(*)
   test "analog/r63" on boards BoardSet_boards_1_to_1(*)
   test "analog/r64" on boards BoardSet_boards_1_to_1(*)
   test "analog/r66" on boards BoardSet_boards_1_to_1(*)
   test "analog/r105" on boards BoardSet_boards_1_to_1(*)
   test "analog/r112" on boards BoardSet_boards_1_to_1(*)
   test "analog/r119" on boards BoardSet_boards_1_to_1(*)
   test "analog/r121" on boards BoardSet_boards_1_to_1(*)
   test "analog/r124" on boards BoardSet_boards_1_to_1(*)
   test "analog/r126" on boards BoardSet_boards_1_to_1(*)
   test "analog/r131" on boards BoardSet_boards_1_to_1(*)
   test "analog/r135" on boards BoardSet_boards_1_to_1(*)
   test "analog/r147" on boards BoardSet_boards_1_to_1(*)
   test "analog/r151" on boards BoardSet_boards_1_to_1(*)
   test "analog/r161" on boards BoardSet_boards_1_to_1(*)
   test "analog/r181" on boards BoardSet_boards_1_to_1(*)
   test "analog/r184" on boards BoardSet_boards_1_to_1(*)
   test "analog/r188" on boards BoardSet_boards_1_to_1(*)
   test "analog/r189" on boards BoardSet_boards_1_to_1(*)
   test "analog/r19fuck" on boards BoardSet_boards_2_to_2(*)
   test "analog/r201" on boards BoardSet_boards_1_to_1(*)
   test "analog/r202" on boards BoardSet_boards_1_to_1(*)
   test "analog/r205" on boards BoardSet_boards_1_to_1(*)
   test "analog/r216" on boards BoardSet_boards_1_to_1(*)
   test "analog/r217" on boards BoardSet_boards_1_to_1(*)
   test "analog/r219" on boards BoardSet_boards_1_to_1(*)
   test "analog/r220" on boards BoardSet_boards_1_to_1(*)
   test "analog/r222" on boards BoardSet_boards_1_to_1(*)
   test "analog/r225" on boards BoardSet_boards_1_to_1(*)
   test "analog/r227" on boards BoardSet_boards_1_to_1(*)
   test "analog/r229" on boards BoardSet_boards_1_to_1(*)
   test "analog/r231" on boards BoardSet_boards_1_to_1(*)
   test "analog/r233" on boards BoardSet_boards_1_to_1(*)
   test "analog/r238" on boards BoardSet_boards_1_to_1(*)
   test "analog/r243" on boards BoardSet_boards_1_to_1(*)
   test "analog/r249" on boards BoardSet_boards_1_to_1(*)
   test "analog/r252" on boards BoardSet_boards_1_to_1(*)
   test "analog/r255" on boards BoardSet_boards_1_to_1(*)
   test "analog/r256" on boards BoardSet_boards_1_to_1(*)
   test "analog/r268" on boards BoardSet_boards_1_to_1(*)
   test "analog/r269" on boards BoardSet_boards_1_to_1(*)
   test "analog/r277" on boards BoardSet_boards_1_to_1(*)
   test "analog/r279" on boards BoardSet_boards_1_to_1(*)
   test "analog/r282" on boards BoardSet_boards_1_to_1(*)
   test "analog/r283" on boards BoardSet_boards_1_to_1(*)
   test "analog/r284" on boards BoardSet_boards_1_to_1(*)
   test "analog/r285" on boards BoardSet_boards_1_to_1(*)
   test "analog/r288" on boards BoardSet_boards_1_to_1(*)
   test "analog/r292" on boards BoardSet_boards_1_to_1(*)
   test "analog/r293" on boards BoardSet_boards_1_to_1(*)
   test "analog/r296" on boards BoardSet_boards_1_to_1(*)
   test "analog/r311" on boards BoardSet_boards_1_to_1(*)
   test "analog/r319" on boards BoardSet_boards_1_to_1(*)
   test "analog/r320" on boards BoardSet_boards_1_to_1(*)
   test "analog/r329" on boards BoardSet_boards_1_to_1(*)
   test "analog/r332" on boards BoardSet_boards_1_to_1(*)
   test "analog/r334" on boards BoardSet_boards_1_to_1(*)
   test "analog/r350" on boards BoardSet_boards_1_to_1(*)
   test "analog/r354" on boards BoardSet_boards_1_to_1(*)
   test "analog/r357" on boards BoardSet_boards_1_to_1(*)
   test "analog/r375" on boards BoardSet_boards_1_to_1(*)
   test "analog/r392" on boards BoardSet_boards_1_to_1(*)
   test "analog/r393" on boards BoardSet_boards_1_to_1(*)
   test "analog/r399" on boards BoardSet_boards_1_to_1(*)
   test "analog/r400" on boards BoardSet_boards_1_to_1(*)
   test "analog/r407" on boards BoardSet_boards_1_to_1(*)
   test "analog/r416" on boards BoardSet_boards_1_to_1(*)
   test "analog/r436" on boards BoardSet_boards_1_to_1(*)
   test "analog/r438" on boards BoardSet_boards_1_to_1(*)
   test "analog/r439" on boards BoardSet_boards_1_to_1(*)
   test "analog/r440" on boards BoardSet_boards_1_to_1(*)
   test "analog/r441" on boards BoardSet_boards_1_to_1(*)
   test "analog/r442" on boards BoardSet_boards_1_to_1(*)
   test "analog/r445" on boards BoardSet_boards_1_to_1(*)
   test "analog/r449" on boards BoardSet_boards_1_to_1(*)
   test "analog/r450" on boards BoardSet_boards_1_to_1(*)
   test "analog/r464" on boards BoardSet_boards_1_to_1(*)
   test "analog/r472" on boards BoardSet_boards_1_to_1(*)
   test "analog/r478" on boards BoardSet_boards_1_to_1(*)
   test "analog/r502" on boards BoardSet_boards_1_to_1(*)
   test "analog/r509" on boards BoardSet_boards_1_to_1(*)
   test "analog/r537" on boards BoardSet_boards_1_to_1(*)
   test "analog/r538" on boards BoardSet_boards_1_to_1(*)
   test "analog/r540" on boards BoardSet_boards_1_to_1(*)
   test "analog/r541" on boards BoardSet_boards_1_to_1(*)
   test "analog/r547" on boards BoardSet_boards_1_to_1(*)
   test "analog/r548" on boards BoardSet_boards_1_to_1(*)
   test "analog/r549" on boards BoardSet_boards_1_to_1(*)
   test "analog/r551" on boards BoardSet_boards_1_to_1(*)
   test "analog/r553" on boards BoardSet_boards_1_to_1(*)
   test "analog/r556" on boards BoardSet_boards_1_to_1(*)
   test "analog/r558" on boards BoardSet_boards_1_to_1(*)
   test "analog/r559" on boards BoardSet_boards_1_to_1(*)
   test "analog/r560" on boards BoardSet_boards_1_to_1(*)
   test "analog/r563" on boards BoardSet_boards_1_to_1(*)
   test "analog/r564" on boards BoardSet_boards_1_to_1(*)
   test "analog/r567" on boards BoardSet_boards_1_to_1(*)
   test "analog/r570" on boards BoardSet_boards_1_to_1(*)
   test "analog/r572" on boards BoardSet_boards_1_to_1(*)
   test "analog/r573" on boards BoardSet_boards_1_to_1(*)
   test "analog/r574" on boards BoardSet_boards_1_to_1(*)
   test "analog/r576" on boards BoardSet_boards_1_to_1(*)
   test "analog/r577" on boards BoardSet_boards_1_to_1(*)
   test "analog/r578" on boards BoardSet_boards_1_to_1(*)
   test "analog/r579" on boards BoardSet_boards_1_to_1(*)
   test "analog/r580" on boards BoardSet_boards_1_to_1(*)
   test "analog/r585" on boards BoardSet_boards_1_to_1(*)
   test "analog/r589" on boards BoardSet_boards_1_to_1(*)
   test "analog/r590" on boards BoardSet_boards_1_to_1(*)
   test "analog/r608" on boards BoardSet_boards_1_to_1(*)
   test "analog/r609" on boards BoardSet_boards_1_to_1(*)
   test "analog/r610" on boards BoardSet_boards_1_to_1(*)
   test "analog/r611" on boards BoardSet_boards_1_to_1(*)
   test "analog/r616" on boards BoardSet_boards_1_to_1(*)
   test "analog/r617" on boards BoardSet_boards_1_to_1(*)
   test "analog/r625" on boards BoardSet_boards_1_to_1(*)
   test "analog/r626" on boards BoardSet_boards_1_to_1(*)
   test "analog/r629" on boards BoardSet_boards_1_to_1(*)
   test "analog/r648" on boards BoardSet_boards_1_to_1(*)
   test "analog/r653" on boards BoardSet_boards_1_to_1(*)
   test "analog/r655" on boards BoardSet_boards_1_to_1(*)
   test "analog/r656" on boards BoardSet_boards_1_to_1(*)
   test "analog/r657" on boards BoardSet_boards_1_to_1(*)
   test "analog/r660" on boards BoardSet_boards_1_to_1(*)
   test "analog/r666" on boards BoardSet_boards_1_to_1(*)
   test "analog/r667" on boards BoardSet_boards_1_to_1(*)
   test "analog/r671" on boards BoardSet_boards_1_to_1(*)
   test "analog/r672" on boards BoardSet_boards_1_to_1(*)
   test "analog/r673" on boards BoardSet_boards_1_to_1(*)
   test "analog/r688" on boards BoardSet_boards_1_to_1(*)
   test "analog/r690" on boards BoardSet_boards_1_to_1(*)
   test "analog/r695" on boards BoardSet_boards_1_to_1(*)
   test "analog/r696" on boards BoardSet_boards_1_to_1(*)
   test "analog/r698" on boards BoardSet_boards_1_to_1(*)
   test "analog/r710" on boards BoardSet_boards_1_to_1(*)
   test "analog/r1849" on boards BoardSet_boards_1_to_1(*)
   test "analog/r2542" on boards BoardSet_boards_1_to_1(*)
   test "analog/r2594" on boards BoardSet_boards_1_to_1(*)
   test "analog/r3231" on boards BoardSet_boards_1_to_1(*)
   test "analog/r3387" on boards BoardSet_boards_1_to_1(*)
   test "analog/r3499" on boards BoardSet_boards_1_to_1(*)
   test "analog/r5349" on boards BoardSet_boards_1_to_1(*)
   test "analog/r8153" on boards BoardSet_boards_1_to_1(*)
   test "analog/tc20" on boards BoardSet_boards_1_to_1(*)
   test "analog/tc26" on boards BoardSet_boards_1_to_1(*)
   test "analog/el1%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/el1%jp2" on boards BoardSet_boards_1_to_1(*)
   test "analog/el2%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/el2%jp2" on boards BoardSet_boards_1_to_1(*)
   test "analog/el3%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/el3%jp2" on boards BoardSet_boards_1_to_1(*)
   test "analog/el4%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/el4%jp2" on boards BoardSet_boards_1_to_1(*)
   test "analog/l46%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/l49%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/l49%jp2" on boards BoardSet_boards_1_to_1(*)
   test "analog/l50%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/l50%jp2" on boards BoardSet_boards_1_to_1(*)
   test "analog/l53%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/l53%jp2" on boards BoardSet_boards_1_to_1(*)
   test "analog/l54%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/l54%jp2" on boards BoardSet_boards_1_to_1(*)
   test "analog/l55%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/l55%jp2" on boards BoardSet_boards_1_to_1(*)
   test "analog/l56%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/l57%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/l57%jp2" on boards BoardSet_boards_1_to_1(*)
   test "analog/pl28%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp1" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp2" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp3" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp4" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp5" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp6" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp7" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp8" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp9" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp10" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp11" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp12" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp13" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp14" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp15" on boards BoardSet_boards_1_to_1(*)
   test "analog/xf1%jp16" on boards BoardSet_boards_1_to_1(*)
   test "analog/el1%jp2" on boards BoardSet_boards_2_to_2(*)
   test "analog/el2%jp2" on boards BoardSet_boards_2_to_2(*)
   test "analog/l1" on boards BoardSet_boards_2_to_2(*)
   test "analog/l2" on boards BoardSet_boards_2_to_2(*)
   test "analog/l3" on boards BoardSet_boards_2_to_2(*)
   test "analog/l5" on boards BoardSet_boards_2_to_2(*)
   test "analog/l8" on boards BoardSet_boards_2_to_2(*)
   test "analog/l9" on boards BoardSet_boards_2_to_2(*)
   test "analog/l10%jp1" on boards BoardSet_boards_2_to_2(*)
   test "analog/l10%jp2" on boards BoardSet_boards_2_to_2(*)
   test "analog/l11%jp1" on boards BoardSet_boards_2_to_2(*)
   test "analog/l11%jp2" on boards BoardSet_boards_2_to_2(*)
   test "analog/l12" on boards BoardSet_boards_2_to_2(*)
   call Update_Status (Status_Code, All_Failed)
subend

sub Shorts (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

   if Message$ <> "" then  print tab(5);Message$
   call Panel_Enable_Boards
   test "shorts" on boards BoardSet_boards_1_to_1(*)
   test "shorts" on boards BoardSet_boards_2_to_2(*)
   test "shorts" on boards BoardSet_boards_3_to_3(*)
   test "shorts" on boards BoardSet_boards_4_to_4(*)
   call Update_Status (Status_Code, All_Failed)
subend

sub Analog_Tests (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

   if Message$ <> "" then  print tab(5);Message$
   call Panel_Enable_Boards
   test "analog/c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/tc8" on boards BoardSet_boards_1_to_1(*)
   test "analog/c14" on boards BoardSet_boards_1_to_1(*)
   test "analog/c256" on boards BoardSet_boards_1_to_1(*)
   test "analog/c19" on boards BoardSet_boards_1_to_1(*)
   test "analog/c24" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c41" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c351" on boards BoardSet_boards_1_to_1(*)
   test "analog/c770" on boards BoardSet_boards_1_to_1(*)
   test "analog/c106" on boards BoardSet_boards_1_to_1(*)
   test "analog/c99" on boards BoardSet_boards_1_to_1(*)
   test "analog/c107" on boards BoardSet_boards_1_to_1(*)
   test "analog/tc3" on boards BoardSet_boards_1_to_1(*)
   test "analog/c103" on boards BoardSet_boards_1_to_1(*)
   test "analog/c104" on boards BoardSet_boards_1_to_1(*)
   test "analog/c108" on boards BoardSet_boards_1_to_1(*)
   test "analog/tc5" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c125" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c156" on boards BoardSet_boards_1_to_1(*)
   test "analog/c216" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c133" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c151" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c149" on boards BoardSet_boards_1_to_1(*)
   test "analog/c152" on boards BoardSet_boards_1_to_1(*)
   test "analog/c146" on boards BoardSet_boards_1_to_1(*)
   test "analog/c157" on boards BoardSet_boards_1_to_1(*)
   test "analog/c597" on boards BoardSet_boards_1_to_1(*)
   test "analog/c163" on boards BoardSet_boards_1_to_1(*)
   test "analog/c168" on boards BoardSet_boards_1_to_1(*)
   test "analog/c173" on boards BoardSet_boards_1_to_1(*)
   test "analog/c177" on boards BoardSet_boards_1_to_1(*)
   test "analog/c183" on boards BoardSet_boards_1_to_1(*)
   test "analog/c189" on boards BoardSet_boards_1_to_1(*)
!   test "analog/tc19" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c673" on boards BoardSet_boards_1_to_1(*)
   test "analog/c198" on boards BoardSet_boards_1_to_1(*)
   test "analog/c194" on boards BoardSet_boards_1_to_1(*)
   test "analog/c196" on boards BoardSet_boards_1_to_1(*)
   test "analog/c201" on boards BoardSet_boards_1_to_1(*)
   test "analog/c202" on boards BoardSet_boards_1_to_1(*)
   test "analog/c211" on boards BoardSet_boards_1_to_1(*)
   test "analog/c224" on boards BoardSet_boards_1_to_1(*)
   test "analog/c222" on boards BoardSet_boards_1_to_1(*)
   test "analog/c223" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c225" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c227" on boards BoardSet_boards_1_to_1(*)
   test "analog/c233" on boards BoardSet_boards_1_to_1(*)
   test "analog/c236" on boards BoardSet_boards_1_to_1(*)
   test "analog/c240" on boards BoardSet_boards_1_to_1(*)
   test "analog/c243" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c242" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c250" on boards BoardSet_boards_1_to_1(*)
   test "analog/c264" on boards BoardSet_boards_1_to_1(*)
   test "analog/c265" on boards BoardSet_boards_1_to_1(*)
   test "analog/c269" on boards BoardSet_boards_1_to_1(*)
   test "analog/c270" on boards BoardSet_boards_1_to_1(*)
   test "analog/c280" on boards BoardSet_boards_1_to_1(*)
   test "analog/c287" on boards BoardSet_boards_1_to_1(*)
   test "analog/c302" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c304" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c308" on boards BoardSet_boards_1_to_1(*)
   test "analog/c309" on boards BoardSet_boards_1_to_1(*)
   test "analog/c325" on boards BoardSet_boards_1_to_1(*)
   test "analog/c376" on boards BoardSet_boards_1_to_1(*)
   test "analog/c345" on boards BoardSet_boards_1_to_1(*)
   test "analog/c337" on boards BoardSet_boards_1_to_1(*)
   test "analog/c29" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c40" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c395" on boards BoardSet_boards_1_to_1(*)
   test "analog/c399" on boards BoardSet_boards_1_to_1(*)
   test "analog/c406" on boards BoardSet_boards_1_to_1(*)
   test "analog/c409" on boards BoardSet_boards_1_to_1(*)
   test "analog/c412" on boards BoardSet_boards_1_to_1(*)
   test "analog/c421" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c424" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c86" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c465" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c438" on boards BoardSet_boards_1_to_1(*)
   test "analog/c439" on boards BoardSet_boards_1_to_1(*)
   test "analog/c442" on boards BoardSet_boards_1_to_1(*)
   test "analog/c457" on boards BoardSet_boards_1_to_1(*)
   test "analog/c482" on boards BoardSet_boards_1_to_1(*)
   test "analog/c494" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c523" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c547" on boards BoardSet_boards_1_to_1(*)
   test "analog/c52" on boards BoardSet_boards_1_to_1(*)
   test "analog/c583" on boards BoardSet_boards_1_to_1(*)
   test "analog/c598" on boards BoardSet_boards_1_to_1(*)
   test "analog/c596" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c619" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c635" on boards BoardSet_boards_1_to_1(*)
   test "analog/c180" on boards BoardSet_boards_1_to_1(*)
   test "analog/c185" on boards BoardSet_boards_1_to_1(*)
   test "analog/c671" on boards BoardSet_boards_1_to_1(*)
   test "analog/c228" on boards BoardSet_boards_1_to_1(*)
   test "analog/c237" on boards BoardSet_boards_1_to_1(*)
   test "analog/c692" on boards BoardSet_boards_1_to_1(*)
   test "analog/c697" on boards BoardSet_boards_1_to_1(*)
   test "analog/c698" on boards BoardSet_boards_1_to_1(*)
   test "analog/c701" on boards BoardSet_boards_1_to_1(*)
   test "analog/c705" on boards BoardSet_boards_1_to_1(*)
   test "analog/c706" on boards BoardSet_boards_1_to_1(*)
   test "analog/c710" on boards BoardSet_boards_1_to_1(*)
   test "analog/c714" on boards BoardSet_boards_1_to_1(*)
   test "analog/c716" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c721" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c723" on boards BoardSet_boards_1_to_1(*)
   test "analog/c725" on boards BoardSet_boards_1_to_1(*)
   test "analog/c726" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c757" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c5316" on boards BoardSet_boards_1_to_1(*)
   test "analog/ptc11" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc25" on boards BoardSet_boards_1_to_1(*)
!   test "analog/ec17" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/pc381" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc32" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc43" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc35" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc42" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc44" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc505" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc441" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc449" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc455" on boards BoardSet_boards_1_to_1(*)
!   test "analog/pc458" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/pc463" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc473" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc489" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc493" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc497" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc57" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc563" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc554" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc556" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc572" on boards BoardSet_boards_1_to_1(*)
   test "analog/ptc2" on boards BoardSet_boards_1_to_1(*)
   test "analog/ptc22" on boards BoardSet_boards_1_to_1(*)
   test "analog/ptc24" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc277" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc733" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc738" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc739" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc748" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc750" on boards BoardSet_boards_1_to_1(*)
!   test "analog/pc751" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/pc759" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc763" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc768" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc771" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc775" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc788" on boards BoardSet_boards_1_to_1(*)
   test "analog/ptc27" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc100706" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc100708" on boards BoardSet_boards_1_to_1(*)
   test "analog/c11" on boards BoardSet_boards_1_to_1(*)
   test "analog/c12" on boards BoardSet_boards_1_to_1(*)
   test "analog/c283" on boards BoardSet_boards_1_to_1(*)
   test "analog/c284" on boards BoardSet_boards_1_to_1(*)
   test "analog/c285" on boards BoardSet_boards_1_to_1(*)
   test "analog/c289" on boards BoardSet_boards_1_to_1(*)
   test "analog/c760" on boards BoardSet_boards_1_to_1(*)
   test "analog/c330" on boards BoardSet_boards_1_to_1(*)
   test "analog/c349" on boards BoardSet_boards_1_to_1(*)
   test "analog/c360" on boards BoardSet_boards_1_to_1(*)
   test "analog/c374" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c643" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c647" on boards BoardSet_boards_1_to_1(*)
   test "analog/c652" on boards BoardSet_boards_1_to_1(*)
   test "analog/c661" on boards BoardSet_boards_1_to_1(*)
   test "analog/c699" on boards BoardSet_boards_1_to_1(*)
   test "analog/c727" on boards BoardSet_boards_1_to_1(*)
   test "analog/c728" on boards BoardSet_boards_1_to_1(*)
   test "analog/c777" on boards BoardSet_boards_1_to_1(*)
   test "analog/c780" on boards BoardSet_boards_1_to_1(*)
   test "analog/c355" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc50" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc425" on boards BoardSet_boards_1_to_1(*)
!   test "analog/pc447" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/pc559" on boards BoardSet_boards_1_to_1(*)
   test "analog/c126" on boards BoardSet_boards_1_to_1(*)
   test "analog/c167" on boards BoardSet_boards_1_to_1(*)
   test "analog/c251" on boards BoardSet_boards_1_to_1(*)
   test "analog/c275" on boards BoardSet_boards_1_to_1(*)
   test "analog/c392" on boards BoardSet_boards_1_to_1(*)
   test "analog/c749" on boards BoardSet_boards_1_to_1(*)
   test "analog/c782" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc534" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc741" on boards BoardSet_boards_1_to_1(*)
   test "analog/c33" on boards BoardSet_boards_1_to_1(*)
   test "analog/c79" on boards BoardSet_boards_1_to_1(*)
   test "analog/c402" on boards BoardSet_boards_1_to_1(*)
   test "analog/c408" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc485" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c121" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c147" on boards BoardSet_boards_1_to_1(*)
   test "analog/c179" on boards BoardSet_boards_1_to_1(*)
   test "analog/c210" on boards BoardSet_boards_1_to_1(*)
   test "analog/c226" on boards BoardSet_boards_1_to_1(*)
   test "analog/c252" on boards BoardSet_boards_1_to_1(*)
   test "analog/c253" on boards BoardSet_boards_1_to_1(*)
   test "analog/c297" on boards BoardSet_boards_1_to_1(*)
   test "analog/c344" on boards BoardSet_boards_1_to_1(*)
   test "analog/c417" on boards BoardSet_boards_1_to_1(*)
   test "analog/c418" on boards BoardSet_boards_1_to_1(*)
   test "analog/c450" on boards BoardSet_boards_1_to_1(*)
   test "analog/c549" on boards BoardSet_boards_1_to_1(*)
   test "analog/c575" on boards BoardSet_boards_1_to_1(*)
   test "analog/c578" on boards BoardSet_boards_1_to_1(*)
   test "analog/c734" on boards BoardSet_boards_1_to_1(*)
   test "analog/c773" on boards BoardSet_boards_1_to_1(*)
   test "analog/c804" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc51" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc501" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc747" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc755" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc758" on boards BoardSet_boards_1_to_1(*)
   test "analog/c49" on boards BoardSet_boards_1_to_1(*)
   test "analog/c328" on boards BoardSet_boards_1_to_1(*)
   test "analog/c461" on boards BoardSet_boards_1_to_1(*)
   test "analog/c477" on boards BoardSet_boards_1_to_1(*)
   test "analog/ptc1" on boards BoardSet_boards_1_to_1(*)
   test "analog/c238" on boards BoardSet_boards_1_to_1(*)
   test "analog/c440" on boards BoardSet_boards_1_to_1(*)
   test "analog/c519" on boards BoardSet_boards_1_to_1(*)
   test "analog/c520" on boards BoardSet_boards_1_to_1(*)
   test "analog/c636" on boards BoardSet_boards_1_to_1(*)
   test "analog/c8335" on boards BoardSet_boards_1_to_1(*)
   test "analog/c89" on boards BoardSet_boards_1_to_1(*)
   test "analog/c123" on boards BoardSet_boards_1_to_1(*)
   test "analog/c310" on boards BoardSet_boards_1_to_1(*)
   test "analog/c347" on boards BoardSet_boards_1_to_1(*)
   test "analog/c368" on boards BoardSet_boards_1_to_1(*)
   test "analog/c378" on boards BoardSet_boards_1_to_1(*)
   test "analog/c92" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c669" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c102" on boards BoardSet_boards_1_to_1(*)
   test "analog/c195" on boards BoardSet_boards_1_to_1(*)
   test "analog/c603" on boards BoardSet_boards_1_to_1(*)
   test "analog/c604" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc396" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc472" on boards BoardSet_boards_1_to_1(*)
   test "analog/c134" on boards BoardSet_boards_1_to_1(*)
   test "analog/c415" on boards BoardSet_boards_1_to_1(*)
   test "analog/c416" on boards BoardSet_boards_1_to_1(*)
   test "analog/c605" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc21" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc65" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc74" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc580" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc581" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc582" on boards BoardSet_boards_1_to_1(*)
   test "analog/c230" on boards BoardSet_boards_1_to_1(*)
   test "analog/c263" on boards BoardSet_boards_1_to_1(*)
   test "analog/c491" on boards BoardSet_boards_1_to_1(*)
   test "analog/ptc6" on boards BoardSet_boards_1_to_1(*)
   test "analog/c234" on boards BoardSet_boards_1_to_1(*)
   test "analog/c422" on boards BoardSet_boards_1_to_1(*)
   test "analog/c453" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9410" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9411" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9412" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9413" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec12" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec13" on boards BoardSet_boards_1_to_1(*)
   test "analog/ec14" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc69" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc72" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc513" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc516" on boards BoardSet_boards_1_to_1(*)
   test "analog/c413" on boards BoardSet_boards_1_to_1(*)
   test "analog/c414" on boards BoardSet_boards_1_to_1(*)
   test "analog/c460" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c174" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c181" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c197" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c199" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c217" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c221" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c176" on boards BoardSet_boards_1_to_1(*)
   test "analog/c184" on boards BoardSet_boards_1_to_1(*)
   test "analog/c720" on boards BoardSet_boards_1_to_1(*)
   test "analog/c187" on boards BoardSet_boards_1_to_1(*)
   test "analog/c358" on boards BoardSet_boards_1_to_1(*)
   test "analog/c359" on boards BoardSet_boards_1_to_1(*)
   test "analog/c207" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c651" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c657" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c722" on boards BoardSet_boards_1_to_1(*)
   test "analog/c261" on boards BoardSet_boards_1_to_1(*)
   test "analog/c262" on boards BoardSet_boards_1_to_1(*)
   test "analog/c361" on boards BoardSet_boards_1_to_1(*)
   test "analog/c362" on boards BoardSet_boards_1_to_1(*)
   test "analog/c364" on boards BoardSet_boards_1_to_1(*)
   test "analog/c365" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc779" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc100707" on boards BoardSet_boards_1_to_1(*)
   test "analog/c375" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c662" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c9387" on boards BoardSet_boards_1_to_1(*)
   test "analog/c9409" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc512" on boards BoardSet_boards_1_to_1(*)
   test "analog/c654" on boards BoardSet_boards_1_to_1(*)
!   test "analog/c419" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c432" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/c445" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/c527" on boards BoardSet_boards_1_to_1(*)
   test "analog/c536" on boards BoardSet_boards_1_to_1(*)
   test "analog/c552" on boards BoardSet_boards_1_to_1(*)
   test "analog/c564" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc268" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc541" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc587" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc462" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc468" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc469" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc496" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc725" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc783" on boards BoardSet_boards_1_to_1(*)
   test "analog/pc504" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu2%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu4%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu8%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu29%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu31%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu44%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu55%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu56%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu57%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu58%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu61%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu63%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu70%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu71%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu84%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu85%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/u16%c1" on boards BoardSet_boards_1_to_1(*)
   test "analog/u38%c1" on boards BoardSet_boards_1_to_1(*)
!   test "analog/u39%c1" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/d1%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d1%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d6%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d6%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d7%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d7%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d8%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d8%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d9%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d9%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d10%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d10%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d15%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d15%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d16%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d16%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d17%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d17%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d18%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d18%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d19%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d29%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d29%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d30%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d30%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d31%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d31%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d32%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d32%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d33%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d33%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d34%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d34%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d35%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d35%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d46%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d46%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d53%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d53%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/d757%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/d757%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/led1%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/led2%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/led3%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd1%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd1%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd2%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd2%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd3%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd3%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd4%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd4%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd27%cr" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd37%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd47%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd49%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd49%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd50%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd50%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd58%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd58%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd10053%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd10053%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq1%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq1%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq3%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq3%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq5%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq7%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq8%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq8%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq11%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq11%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq12%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq13%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq13%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq44%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq46%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq49%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq51%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq52%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq52%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq53%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq56%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq67%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq72%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq94%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq95%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq100073%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq100074%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q2%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q2%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q4%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q4%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q6%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q9%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q10%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q15%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q15%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q16%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q16%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q17%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q17%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q18%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q18%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q19%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q19%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q20%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q20%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q21%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q21%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q22%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q22%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q23%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q24%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q24%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q25%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q25%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q26%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q26%cr1-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/q26%cr3-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/q27%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q27%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q28%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q28%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q29%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q29%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q30%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q30%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q31%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q31%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q32%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q32%cr1-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/q32%cr3-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/q33%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q33%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q34%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q34%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q35%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q36%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q36%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q37%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q38%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q38%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q39%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q39%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q40%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q40%cr4-3" on boards BoardSet_boards_1_to_1(*)
!   test "analog/q41%cr1-3" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/q42%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q42%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q43%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q43%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q47%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q47%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q48%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q48%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q50%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q50%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q54%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/q54%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q55%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q57%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q58%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q58%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q59%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q59%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q60%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q60%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q61%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q61%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q62%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q63%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q64%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q64%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q65%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q65%cr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/q66%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q68%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/q74%cr1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q74%cr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/u21%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/u21%cr1-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/u21%cr3-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/u22%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/u22%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/u24%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/u24%cr1-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/u24%cr3-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/u28%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/u28%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/u30%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/u30%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/u32%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/u32%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/u34%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/u34%cr1-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/u34%cr3-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/u35%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/u35%cr1-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/u35%cr3-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/u37%cr1-6" on boards BoardSet_boards_1_to_1(*)
   test "analog/u37%cr4-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/u40%cr1-3" on boards BoardSet_boards_1_to_1(*)
   test "analog/u40%cr1-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/u40%cr3-4" on boards BoardSet_boards_1_to_1(*)
   test "analog/d12" on boards BoardSet_boards_1_to_1(*)
   test "analog/d14" on boards BoardSet_boards_1_to_1(*)
   test "analog/d20" on boards BoardSet_boards_1_to_1(*)
   test "analog/d21" on boards BoardSet_boards_1_to_1(*)
   test "analog/d28" on boards BoardSet_boards_1_to_1(*)
   test "analog/d36" on boards BoardSet_boards_1_to_1(*)
   test "analog/d38" on boards BoardSet_boards_1_to_1(*)
   test "analog/d39" on boards BoardSet_boards_1_to_1(*)
   test "analog/d40" on boards BoardSet_boards_1_to_1(*)
   test "analog/d41" on boards BoardSet_boards_1_to_1(*)
   test "analog/d42" on boards BoardSet_boards_1_to_1(*)
   test "analog/d43" on boards BoardSet_boards_1_to_1(*)
   test "analog/d44" on boards BoardSet_boards_1_to_1(*)
   test "analog/d45" on boards BoardSet_boards_1_to_1(*)
   test "analog/d47" on boards BoardSet_boards_1_to_1(*)
   test "analog/d48" on boards BoardSet_boards_1_to_1(*)
   test "analog/d51" on boards BoardSet_boards_1_to_1(*)
   test "analog/d54" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd11" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd12" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd29" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd30" on boards BoardSet_boards_1_to_1(*)
   test "analog/pd48" on boards BoardSet_boards_1_to_1(*)
!   test "analog/l1" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/l2" on boards BoardSet_boards_1_to_1(*)
   test "analog/l4" on boards BoardSet_boards_1_to_1(*)
!   test "analog/l6" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l8" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/l9" on boards BoardSet_boards_1_to_1(*)
!   test "analog/l10" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l11" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/l12" on boards BoardSet_boards_1_to_1(*)
   test "analog/l13" on boards BoardSet_boards_1_to_1(*)
!   test "analog/l14" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/l16" on boards BoardSet_boards_1_to_1(*)
!   test "analog/l17" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l18" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l19" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l20" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l21" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l22" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l24" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l25" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l26" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l29" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/l30" on boards BoardSet_boards_1_to_1(*)
   test "analog/l31" on boards BoardSet_boards_1_to_1(*)
   test "analog/l32" on boards BoardSet_boards_1_to_1(*)
!   test "analog/l38" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l39" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l40" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l42" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/l43" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/l45" on boards BoardSet_boards_1_to_1(*)
   test "analog/l47" on boards BoardSet_boards_1_to_1(*)
!   test "analog/l48" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/pq1%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq11%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq12%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq13%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq52%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq56%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr2" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr19" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr355" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr382" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr635" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr670" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr10049" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr10831" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr100504" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr100811" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr100812" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr100813" on boards BoardSet_boards_1_to_1(*)
   test "analog/r14" on boards BoardSet_boards_1_to_1(*)
   test "analog/r35" on boards BoardSet_boards_1_to_1(*)
   test "analog/r97" on boards BoardSet_boards_1_to_1(*)
   test "analog/r100" on boards BoardSet_boards_1_to_1(*)
   test "analog/r103" on boards BoardSet_boards_1_to_1(*)
   test "analog/r107" on boards BoardSet_boards_1_to_1(*)
   test "analog/r108" on boards BoardSet_boards_1_to_1(*)
   test "analog/r114" on boards BoardSet_boards_1_to_1(*)
   test "analog/r115" on boards BoardSet_boards_1_to_1(*)
   test "analog/r118" on boards BoardSet_boards_1_to_1(*)
   test "analog/r120" on boards BoardSet_boards_1_to_1(*)
   test "analog/r122" on boards BoardSet_boards_1_to_1(*)
   test "analog/r138" on boards BoardSet_boards_1_to_1(*)
   test "analog/r139" on boards BoardSet_boards_1_to_1(*)
   test "analog/r182" on boards BoardSet_boards_1_to_1(*)
   test "analog/r183" on boards BoardSet_boards_1_to_1(*)
   test "analog/r232" on boards BoardSet_boards_1_to_1(*)
   test "analog/r235" on boards BoardSet_boards_1_to_1(*)
   test "analog/r241" on boards BoardSet_boards_1_to_1(*)
   test "analog/r250" on boards BoardSet_boards_1_to_1(*)
   test "analog/r253" on boards BoardSet_boards_1_to_1(*)
   test "analog/r259" on boards BoardSet_boards_1_to_1(*)
   test "analog/r264" on boards BoardSet_boards_1_to_1(*)
   test "analog/r265" on boards BoardSet_boards_1_to_1(*)
   test "analog/r271" on boards BoardSet_boards_1_to_1(*)
   test "analog/r272" on boards BoardSet_boards_1_to_1(*)
   test "analog/r273" on boards BoardSet_boards_1_to_1(*)
   test "analog/r276" on boards BoardSet_boards_1_to_1(*)
   test "analog/r281" on boards BoardSet_boards_1_to_1(*)
   test "analog/r286" on boards BoardSet_boards_1_to_1(*)
   test "analog/r290" on boards BoardSet_boards_1_to_1(*)
   test "analog/r294" on boards BoardSet_boards_1_to_1(*)
   test "analog/r295" on boards BoardSet_boards_1_to_1(*)
   test "analog/r301" on boards BoardSet_boards_1_to_1(*)
   test "analog/r303" on boards BoardSet_boards_1_to_1(*)
   test "analog/r304" on boards BoardSet_boards_1_to_1(*)
   test "analog/r305" on boards BoardSet_boards_1_to_1(*)
   test "analog/r309" on boards BoardSet_boards_1_to_1(*)
   test "analog/r316" on boards BoardSet_boards_1_to_1(*)
   test "analog/r317" on boards BoardSet_boards_1_to_1(*)
   test "analog/r335" on boards BoardSet_boards_1_to_1(*)
   test "analog/r342" on boards BoardSet_boards_1_to_1(*)
   test "analog/r343" on boards BoardSet_boards_1_to_1(*)
   test "analog/r344" on boards BoardSet_boards_1_to_1(*)
   test "analog/r345" on boards BoardSet_boards_1_to_1(*)
   test "analog/r364" on boards BoardSet_boards_1_to_1(*)
   test "analog/r371" on boards BoardSet_boards_1_to_1(*)
   test "analog/r372" on boards BoardSet_boards_1_to_1(*)
   test "analog/r380" on boards BoardSet_boards_1_to_1(*)
   test "analog/r382" on boards BoardSet_boards_1_to_1(*)
   test "analog/r387" on boards BoardSet_boards_1_to_1(*)
   test "analog/r390" on boards BoardSet_boards_1_to_1(*)
   test "analog/r406" on boards BoardSet_boards_1_to_1(*)
   test "analog/r412" on boards BoardSet_boards_1_to_1(*)
   test "analog/r413" on boards BoardSet_boards_1_to_1(*)
   test "analog/r418" on boards BoardSet_boards_1_to_1(*)
   test "analog/r446" on boards BoardSet_boards_1_to_1(*)
   test "analog/r459" on boards BoardSet_boards_1_to_1(*)
   test "analog/r522" on boards BoardSet_boards_1_to_1(*)
   test "analog/r523" on boards BoardSet_boards_1_to_1(*)
   test "analog/r618" on boards BoardSet_boards_1_to_1(*)
   test "analog/r631" on boards BoardSet_boards_1_to_1(*)
   test "analog/r650" on boards BoardSet_boards_1_to_1(*)
   test "analog/r675" on boards BoardSet_boards_1_to_1(*)
   test "analog/r721" on boards BoardSet_boards_1_to_1(*)
   test "analog/r722" on boards BoardSet_boards_1_to_1(*)
   test "analog/r1542" on boards BoardSet_boards_1_to_1(*)
   test "analog/r2504" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr3" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr11" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr16" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr17" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr6" on boards BoardSet_boards_1_to_1(*)
   test "analog/prn1%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/prn1%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/r278" on boards BoardSet_boards_1_to_1(*)
   test "analog/r422" on boards BoardSet_boards_1_to_1(*)
   test "analog/r427" on boards BoardSet_boards_1_to_1(*)
   test "analog/r510" on boards BoardSet_boards_1_to_1(*)
   test "analog/r511" on boards BoardSet_boards_1_to_1(*)
   test "analog/r620" on boards BoardSet_boards_1_to_1(*)
   test "analog/r633" on boards BoardSet_boards_1_to_1(*)
   test "analog/r687" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr8" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr32" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr419" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr547" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr680" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr12" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr34" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr418" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr426" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr550" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr100712" on boards BoardSet_boards_1_to_1(*)
   test "analog/r167" on boards BoardSet_boards_1_to_1(*)
   test "analog/r195" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr13" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr352" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr354" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr414" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr443" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr491" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr495" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr498" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr632" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr691" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr100815" on boards BoardSet_boards_1_to_1(*)
   test "analog/r42" on boards BoardSet_boards_1_to_1(*)
   test "analog/r44" on boards BoardSet_boards_1_to_1(*)
   test "analog/r176" on boards BoardSet_boards_1_to_1(*)
   test "analog/r193" on boards BoardSet_boards_1_to_1(*)
   test "analog/r200" on boards BoardSet_boards_1_to_1(*)
   test "analog/r221" on boards BoardSet_boards_1_to_1(*)
   test "analog/r224" on boards BoardSet_boards_1_to_1(*)
   test "analog/r226" on boards BoardSet_boards_1_to_1(*)
   test "analog/r228" on boards BoardSet_boards_1_to_1(*)
   test "analog/r234" on boards BoardSet_boards_1_to_1(*)
   test "analog/r236" on boards BoardSet_boards_1_to_1(*)
   test "analog/r237" on boards BoardSet_boards_1_to_1(*)
   test "analog/r240" on boards BoardSet_boards_1_to_1(*)
   test "analog/r242" on boards BoardSet_boards_1_to_1(*)
   test "analog/r247" on boards BoardSet_boards_1_to_1(*)
   test "analog/r260" on boards BoardSet_boards_1_to_1(*)
   test "analog/r287" on boards BoardSet_boards_1_to_1(*)
   test "analog/r297" on boards BoardSet_boards_1_to_1(*)
   test "analog/r302" on boards BoardSet_boards_1_to_1(*)
   test "analog/r310" on boards BoardSet_boards_1_to_1(*)
   test "analog/r318" on boards BoardSet_boards_1_to_1(*)
   test "analog/r327" on boards BoardSet_boards_1_to_1(*)
   test "analog/r360" on boards BoardSet_boards_1_to_1(*)
   test "analog/r365" on boards BoardSet_boards_1_to_1(*)
   test "analog/r396" on boards BoardSet_boards_1_to_1(*)
   test "analog/r434" on boards BoardSet_boards_1_to_1(*)
   test "analog/r514" on boards BoardSet_boards_1_to_1(*)
   test "analog/r524" on boards BoardSet_boards_1_to_1(*)
   test "analog/r528" on boards BoardSet_boards_1_to_1(*)
   test "analog/r533" on boards BoardSet_boards_1_to_1(*)
   test "analog/r562" on boards BoardSet_boards_1_to_1(*)
   test "analog/r569" on boards BoardSet_boards_1_to_1(*)
   test "analog/r601" on boards BoardSet_boards_1_to_1(*)
   test "analog/r602" on boards BoardSet_boards_1_to_1(*)
   test "analog/r607" on boards BoardSet_boards_1_to_1(*)
   test "analog/r619" on boards BoardSet_boards_1_to_1(*)
   test "analog/r703" on boards BoardSet_boards_1_to_1(*)
   test "analog/rt1" on boards BoardSet_boards_1_to_1(*)
!   test "analog/pr29" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr81" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr84" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr44" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr68" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr69" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr72" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr359" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr379" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr380" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr388" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr394" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr420" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr436" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr437" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr444" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr447" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr458" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr460" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr463" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr466" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr469" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr473" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr475" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr477" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr479" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr481" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr485" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr537" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr633" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr638" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr640" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr642" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr643" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr645" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr652" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr668" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr679" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr683" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr685" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr693" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr695" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr100505" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr100814" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r77" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r78" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r79" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r80" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r98" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r109" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r116" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r117" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r125" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r137" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r140" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r148" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r150" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r156" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r160" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r164" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r166" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r179" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r180" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r185" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r186" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r191" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r196" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r197" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r209" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r213" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r218" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r251" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r258" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r266" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r267" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r274" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r275" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r291" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r307" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r308" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r321" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r322" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r325" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r326" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r328" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r331" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r336" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r362" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r386" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r389" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r397" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r411" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r437" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r468" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r518" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r526" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r527" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r535" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r536" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r542" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r546" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r552" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r555" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r557" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r561" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r565" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r566" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r568" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r582" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r583" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r584" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r593" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r594" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r595" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r596" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r597" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r614" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r615" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r621" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r627" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r628" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r658" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r674" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r697" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r702" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r723" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r724" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r725" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r1836" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r8139" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r8149" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/r8150" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/pr45" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr432" on boards BoardSet_boards_1_to_1(*)
   test "analog/r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr67" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr424" on boards BoardSet_boards_1_to_1(*)
   test "analog/r47" on boards BoardSet_boards_1_to_1(*)
   test "analog/r169" on boards BoardSet_boards_1_to_1(*)
   test "analog/r515" on boards BoardSet_boards_1_to_1(*)
   test "analog/r519" on boards BoardSet_boards_1_to_1(*)
   test "analog/r2202" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr74" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr75" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr76" on boards BoardSet_boards_1_to_1(*)
   test "analog/r403" on boards BoardSet_boards_1_to_1(*)
   test "analog/r421" on boards BoardSet_boards_1_to_1(*)
   test "analog/r588" on boards BoardSet_boards_1_to_1(*)
   test "analog/r6504" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr218" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr487" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr620" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr694" on boards BoardSet_boards_1_to_1(*)
   test "analog/r194" on boards BoardSet_boards_1_to_1(*)
!   test "analog/pr348" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "analog/pr363" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/pr350" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr371" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr373" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr471" on boards BoardSet_boards_1_to_1(*)
   test "analog/r123" on boards BoardSet_boards_1_to_1(*)
   test "analog/r162" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr390" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr470" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr637" on boards BoardSet_boards_1_to_1(*)
   test "analog/r46" on boards BoardSet_boards_1_to_1(*)
   test "analog/r113" on boards BoardSet_boards_1_to_1(*)
   test "analog/r152" on boards BoardSet_boards_1_to_1(*)
   test "analog/r246" on boards BoardSet_boards_1_to_1(*)
   test "analog/r270" on boards BoardSet_boards_1_to_1(*)
   test "analog/r368" on boards BoardSet_boards_1_to_1(*)
   test "analog/r505" on boards BoardSet_boards_1_to_1(*)
   test "analog/r530" on boards BoardSet_boards_1_to_1(*)
   test "analog/r539" on boards BoardSet_boards_1_to_1(*)
   test "analog/r603" on boards BoardSet_boards_1_to_1(*)
   test "analog/r623" on boards BoardSet_boards_1_to_1(*)
   test "analog/r624" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr423" on boards BoardSet_boards_1_to_1(*)
   test "analog/r21" on boards BoardSet_boards_1_to_1(*)
   test "analog/r27" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr425" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr639" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr641" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr663" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr10832" on boards BoardSet_boards_1_to_1(*)
   test "analog/r306" on boards BoardSet_boards_1_to_1(*)
   test "analog/r513" on boards BoardSet_boards_1_to_1(*)
   test "analog/r521" on boards BoardSet_boards_1_to_1(*)
   test "analog/r529" on boards BoardSet_boards_1_to_1(*)
   test "analog/r531" on boards BoardSet_boards_1_to_1(*)
   test "analog/r532" on boards BoardSet_boards_1_to_1(*)
   test "analog/r543" on boards BoardSet_boards_1_to_1(*)
   test "analog/r544" on boards BoardSet_boards_1_to_1(*)
   test "analog/r545" on boards BoardSet_boards_1_to_1(*)
   test "analog/r604" on boards BoardSet_boards_1_to_1(*)
   test "analog/r2838" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr429" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr100710" on boards BoardSet_boards_1_to_1(*)
   test "analog/r22" on boards BoardSet_boards_1_to_1(*)
   test "analog/r39" on boards BoardSet_boards_1_to_1(*)
   test "analog/r211" on boards BoardSet_boards_1_to_1(*)
   test "analog/r630" on boards BoardSet_boards_1_to_1(*)
   test "analog/r5391" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr431" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr433" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr435" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr438" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr439" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr440" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr441" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr442" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr455" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr456" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr692" on boards BoardSet_boards_1_to_1(*)
   test "analog/r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/r15" on boards BoardSet_boards_1_to_1(*)
   test "analog/r28" on boards BoardSet_boards_1_to_1(*)
   test "analog/r31" on boards BoardSet_boards_1_to_1(*)
   test "analog/r38" on boards BoardSet_boards_1_to_1(*)
   test "analog/r86" on boards BoardSet_boards_1_to_1(*)
   test "analog/r87" on boards BoardSet_boards_1_to_1(*)
   test "analog/r88" on boards BoardSet_boards_1_to_1(*)
   test "analog/r96" on boards BoardSet_boards_1_to_1(*)
   test "analog/r101" on boards BoardSet_boards_1_to_1(*)
   test "analog/r136" on boards BoardSet_boards_1_to_1(*)
   test "analog/r187" on boards BoardSet_boards_1_to_1(*)
   test "analog/r204" on boards BoardSet_boards_1_to_1(*)
   test "analog/r207" on boards BoardSet_boards_1_to_1(*)
   test "analog/r223" on boards BoardSet_boards_1_to_1(*)
   test "analog/r245" on boards BoardSet_boards_1_to_1(*)
   test "analog/r341" on boards BoardSet_boards_1_to_1(*)
!   test "analog/r346" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/r409" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr462" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr651" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr467" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr474" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr476" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr480" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr492" on boards BoardSet_boards_1_to_1(*)
   test "analog/r280" on boards BoardSet_boards_1_to_1(*)
   test "analog/r591" on boards BoardSet_boards_1_to_1(*)
   test "analog/r705" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr490" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr493" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr499" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr500" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr636" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr644" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr647" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr649" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr654" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr661" on boards BoardSet_boards_1_to_1(*)
   test "analog/r417" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr100711" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr100713" on boards BoardSet_boards_1_to_1(*)
   test "analog/pr100714" on boards BoardSet_boards_1_to_1(*)
   test "analog/prn2%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/prn2%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn26%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn26%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn29%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn29%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn33%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn33%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn37%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn37%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn45%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn45%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn46%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn46%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn47%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn47%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn49%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn49%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn49%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn49%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn50%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn50%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn50%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn53%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn53%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn57%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn57%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn75%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn75%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn75%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn75%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn78%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn78%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn86%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn86%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn197%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn197%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn280%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn281%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn281%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn282%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn282%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn282%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn282%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn283%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn283%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn283%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/q2%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q4%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q15%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q16%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q17%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q20%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q27%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q30%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q34%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/q74%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/r7" on boards BoardSet_boards_1_to_1(*)
   test "analog/r18" on boards BoardSet_boards_1_to_1(*)
   test "analog/r89" on boards BoardSet_boards_1_to_1(*)
   test "analog/r90" on boards BoardSet_boards_1_to_1(*)
   test "analog/r92" on boards BoardSet_boards_1_to_1(*)
   test "analog/r99" on boards BoardSet_boards_1_to_1(*)
   test "analog/r106" on boards BoardSet_boards_1_to_1(*)
   test "analog/r127" on boards BoardSet_boards_1_to_1(*)
   test "analog/r190" on boards BoardSet_boards_1_to_1(*)
   test "analog/r7240" on boards BoardSet_boards_1_to_1(*)
   test "analog/r8151" on boards BoardSet_boards_1_to_1(*)
   test "analog/r8152" on boards BoardSet_boards_1_to_1(*)
   test "analog/r50" on boards BoardSet_boards_1_to_1(*)
   test "analog/r93" on boards BoardSet_boards_1_to_1(*)
   test "analog/r94" on boards BoardSet_boards_1_to_1(*)
   test "analog/r95" on boards BoardSet_boards_1_to_1(*)
   test "analog/r132" on boards BoardSet_boards_1_to_1(*)
   test "analog/r133" on boards BoardSet_boards_1_to_1(*)
   test "analog/r134" on boards BoardSet_boards_1_to_1(*)
   test "analog/r141" on boards BoardSet_boards_1_to_1(*)
   test "analog/r142" on boards BoardSet_boards_1_to_1(*)
   test "analog/r143" on boards BoardSet_boards_1_to_1(*)
   test "analog/r159" on boards BoardSet_boards_1_to_1(*)
   test "analog/r230" on boards BoardSet_boards_1_to_1(*)
   test "analog/r369" on boards BoardSet_boards_1_to_1(*)
   test "analog/r384" on boards BoardSet_boards_1_to_1(*)
   test "analog/r398" on boards BoardSet_boards_1_to_1(*)
   test "analog/r52" on boards BoardSet_boards_1_to_1(*)
   test "analog/r62" on boards BoardSet_boards_1_to_1(*)
   test "analog/r65" on boards BoardSet_boards_1_to_1(*)
   test "analog/r85" on boards BoardSet_boards_1_to_1(*)
   test "analog/r128" on boards BoardSet_boards_1_to_1(*)
   test "analog/r333" on boards BoardSet_boards_1_to_1(*)
   test "analog/r337" on boards BoardSet_boards_1_to_1(*)
   test "analog/r338" on boards BoardSet_boards_1_to_1(*)
   test "analog/r339" on boards BoardSet_boards_1_to_1(*)
   test "analog/r503" on boards BoardSet_boards_1_to_1(*)
   test "analog/r606" on boards BoardSet_boards_1_to_1(*)
   test "analog/r53" on boards BoardSet_boards_1_to_1(*)
   test "analog/r54" on boards BoardSet_boards_1_to_1(*)
   test "analog/r59" on boards BoardSet_boards_1_to_1(*)
   test "analog/r110" on boards BoardSet_boards_1_to_1(*)
   test "analog/r507" on boards BoardSet_boards_1_to_1(*)
   test "analog/r60" on boards BoardSet_boards_1_to_1(*)
   test "analog/r508" on boards BoardSet_boards_1_to_1(*)
   test "analog/r61" on boards BoardSet_boards_1_to_1(*)
   test "analog/r592" on boards BoardSet_boards_1_to_1(*)
   test "analog/r600" on boards BoardSet_boards_1_to_1(*)
   test "analog/r111" on boards BoardSet_boards_1_to_1(*)
   test "analog/r261" on boards BoardSet_boards_1_to_1(*)
   test "analog/r506" on boards BoardSet_boards_1_to_1(*)
   test "analog/r146" on boards BoardSet_boards_1_to_1(*)
   test "analog/r149" on boards BoardSet_boards_1_to_1(*)
   test "analog/r153" on boards BoardSet_boards_1_to_1(*)
   test "analog/r154" on boards BoardSet_boards_1_to_1(*)
   test "analog/r155" on boards BoardSet_boards_1_to_1(*)
   test "analog/r157" on boards BoardSet_boards_1_to_1(*)
   test "analog/r158" on boards BoardSet_boards_1_to_1(*)
   test "analog/r172" on boards BoardSet_boards_1_to_1(*)
   test "analog/r174" on boards BoardSet_boards_1_to_1(*)
   test "analog/r175" on boards BoardSet_boards_1_to_1(*)
   test "analog/r198" on boards BoardSet_boards_1_to_1(*)
   test "analog/r244" on boards BoardSet_boards_1_to_1(*)
   test "analog/r248" on boards BoardSet_boards_1_to_1(*)
   test "analog/r254" on boards BoardSet_boards_1_to_1(*)
   test "analog/r262" on boards BoardSet_boards_1_to_1(*)
   test "analog/r289" on boards BoardSet_boards_1_to_1(*)
   test "analog/r377" on boards BoardSet_boards_1_to_1(*)
   test "analog/r379" on boards BoardSet_boards_1_to_1(*)
   test "analog/r391" on boards BoardSet_boards_1_to_1(*)
   test "analog/r404" on boards BoardSet_boards_1_to_1(*)
   test "analog/r405" on boards BoardSet_boards_1_to_1(*)
   test "analog/r575" on boards BoardSet_boards_1_to_1(*)
   test "analog/r586" on boards BoardSet_boards_1_to_1(*)
   test "analog/r587" on boards BoardSet_boards_1_to_1(*)
   test "analog/r676" on boards BoardSet_boards_1_to_1(*)
   test "analog/r677" on boards BoardSet_boards_1_to_1(*)
   test "analog/r686" on boards BoardSet_boards_1_to_1(*)
   test "analog/r689" on boards BoardSet_boards_1_to_1(*)
   test "analog/r165" on boards BoardSet_boards_1_to_1(*)
   test "analog/r263" on boards BoardSet_boards_1_to_1(*)
   test "analog/r168" on boards BoardSet_boards_1_to_1(*)
   test "analog/r170" on boards BoardSet_boards_1_to_1(*)
   test "analog/r8143" on boards BoardSet_boards_1_to_1(*)
   test "analog/r8144" on boards BoardSet_boards_1_to_1(*)
   test "analog/r8145" on boards BoardSet_boards_1_to_1(*)
   test "analog/r8146" on boards BoardSet_boards_1_to_1(*)
   test "analog/r173" on boards BoardSet_boards_1_to_1(*)
   test "analog/r178" on boards BoardSet_boards_1_to_1(*)
   test "analog/r192" on boards BoardSet_boards_1_to_1(*)
   test "analog/r330" on boards BoardSet_boards_1_to_1(*)
   test "analog/r571" on boards BoardSet_boards_1_to_1(*)
   test "analog/r203" on boards BoardSet_boards_1_to_1(*)
   test "analog/r206" on boards BoardSet_boards_1_to_1(*)
   test "analog/r208" on boards BoardSet_boards_1_to_1(*)
   test "analog/r210" on boards BoardSet_boards_1_to_1(*)
   test "analog/r212" on boards BoardSet_boards_1_to_1(*)
   test "analog/r8147" on boards BoardSet_boards_1_to_1(*)
   test "analog/r8148" on boards BoardSet_boards_1_to_1(*)
   test "analog/r215" on boards BoardSet_boards_1_to_1(*)
   test "analog/r598" on boards BoardSet_boards_1_to_1(*)
   test "analog/r599" on boards BoardSet_boards_1_to_1(*)
   test "analog/r605" on boards BoardSet_boards_1_to_1(*)
   test "analog/r239" on boards BoardSet_boards_1_to_1(*)
   test "analog/r395" on boards BoardSet_boards_1_to_1(*)
   test "analog/r401" on boards BoardSet_boards_1_to_1(*)
   test "analog/r402" on boards BoardSet_boards_1_to_1(*)
   test "analog/r612" on boards BoardSet_boards_1_to_1(*)
   test "analog/r613" on boards BoardSet_boards_1_to_1(*)
   test "analog/r669" on boards BoardSet_boards_1_to_1(*)
   test "analog/r257" on boards BoardSet_boards_1_to_1(*)
   test "analog/r340" on boards BoardSet_boards_1_to_1(*)
   test "analog/r358" on boards BoardSet_boards_1_to_1(*)
   test "analog/r378" on boards BoardSet_boards_1_to_1(*)
   test "analog/r408" on boards BoardSet_boards_1_to_1(*)
   test "analog/r381" on boards BoardSet_boards_1_to_1(*)
   test "analog/r385" on boards BoardSet_boards_1_to_1(*)
   test "analog/r394" on boards BoardSet_boards_1_to_1(*)
   test "analog/r512" on boards BoardSet_boards_1_to_1(*)
   test "analog/r520" on boards BoardSet_boards_1_to_1(*)
   test "analog/r525" on boards BoardSet_boards_1_to_1(*)
   test "analog/r534" on boards BoardSet_boards_1_to_1(*)
   test "analog/r550" on boards BoardSet_boards_1_to_1(*)
   test "analog/r554" on boards BoardSet_boards_1_to_1(*)
   test "analog/r581" on boards BoardSet_boards_1_to_1(*)
   test "analog/r634" on boards BoardSet_boards_1_to_1(*)
   test "analog/r662" on boards BoardSet_boards_1_to_1(*)
   test "analog/r704" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn3%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn3%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn14%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn14%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn55%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn55%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn4%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn4%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn15%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn15%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn73%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn73%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn74%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn74%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn79%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn79%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn80%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn80%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn5%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn5%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn11%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn11%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn12%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn12%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn17%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn17%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn21%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn21%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn21%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn21%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn28%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn28%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn30%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn30%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn39%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn39%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn39%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn39%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn40%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn40%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn41%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn41%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn41%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn41%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn54%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn54%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn56%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn56%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn82%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn36%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn36%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn38%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn38%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn42%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn42%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn44%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn44%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn9%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn20%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn20%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn20%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn20%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn27%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn27%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn31%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn31%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn32%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn32%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn34%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn34%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn43%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn43%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn51%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn51%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn76%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn76%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn76%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn76%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn81%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn81%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp3%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp3%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp3%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp3%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp3%r5" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp3%r6" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp3%r7" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp3%r8" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn35%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn35%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn77%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn77%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp1%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp1%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp1%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp1%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp1%r5" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp1%r6" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp2%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp2%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp2%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp2%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp2%r5" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp2%r6" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp2%r7" on boards BoardSet_boards_1_to_1(*)
   test "analog/rp2%r8" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn58%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn58%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn58%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn58%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn59%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn59%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn60%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn60%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn60%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn60%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn61%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn61%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn61%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn61%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn62%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn62%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn62%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn62%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn63%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn63%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn63%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn63%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn64%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn64%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn64%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn64%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn65%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn65%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn65%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn65%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn66%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn66%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn66%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn66%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn67%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn67%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn67%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn67%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn68%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn68%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn69%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn69%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn69%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn69%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn70%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn70%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn70%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn70%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn71%r1" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn71%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn71%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn72%r2" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn72%r3" on boards BoardSet_boards_1_to_1(*)
   test "analog/rn72%r4" on boards BoardSet_boards_1_to_1(*)
   test "analog/c4" on boards BoardSet_boards_2_to_2(*)
   test "analog/c12" on boards BoardSet_boards_2_to_2(*)
   test "analog/tc1" on boards BoardSet_boards_2_to_2(*)
   test "analog/ec1" on boards BoardSet_boards_2_to_2(*)
!   test "analog/ec8" on boards BoardSet_boards_2_to_2(*)  ! test commented in testorder
!   test "analog/ec9" on boards BoardSet_boards_2_to_2(*)  ! test commented in testorder
   test "analog/ec10" on boards BoardSet_boards_2_to_2(*)
   test "analog/ec11" on boards BoardSet_boards_2_to_2(*)
   test "analog/d1%cr1" on boards BoardSet_boards_2_to_2(*)
   test "analog/d1%cr2" on boards BoardSet_boards_2_to_2(*)
   test "analog/d2%cr1" on boards BoardSet_boards_2_to_2(*)
   test "analog/d2%cr2" on boards BoardSet_boards_2_to_2(*)
   test "analog/led1%cr1" on boards BoardSet_boards_2_to_2(*)
   test "analog/q1%cr1" on boards BoardSet_boards_2_to_2(*)
   test "analog/q1%cr2" on boards BoardSet_boards_2_to_2(*)
   test "analog/q2%cr1" on boards BoardSet_boards_2_to_2(*)
   test "analog/q2%cr2" on boards BoardSet_boards_2_to_2(*)
   test "analog/d3" on boards BoardSet_boards_2_to_2(*)
   test "analog/r3" on boards BoardSet_boards_2_to_2(*)
   test "analog/r4" on boards BoardSet_boards_2_to_2(*)
   test "analog/r5" on boards BoardSet_boards_2_to_2(*)
   test "analog/r6" on boards BoardSet_boards_2_to_2(*)
   test "analog/r7" on boards BoardSet_boards_2_to_2(*)
   test "analog/r33" on boards BoardSet_boards_2_to_2(*)
   test "analog/r8" on boards BoardSet_boards_2_to_2(*)
   test "analog/r9" on boards BoardSet_boards_2_to_2(*)
   test "analog/r21" on boards BoardSet_boards_2_to_2(*)
   test "analog/r24" on boards BoardSet_boards_2_to_2(*)
   test "analog/r25" on boards BoardSet_boards_2_to_2(*)
   test "analog/c23" on boards BoardSet_boards_4_to_4(*)
   test "analog/c24" on boards BoardSet_boards_4_to_4(*)
   test "analog/c25" on boards BoardSet_boards_4_to_4(*)
   test "analog/c26" on boards BoardSet_boards_4_to_4(*)
   test "analog/c502" on boards BoardSet_boards_4_to_4(*)
   test "analog/c28" on boards BoardSet_boards_4_to_4(*)
   test "analog/c29" on boards BoardSet_boards_4_to_4(*)
   test "analog/c30" on boards BoardSet_boards_4_to_4(*)
   test "analog/c31" on boards BoardSet_boards_4_to_4(*)
   test "analog/c32" on boards BoardSet_boards_4_to_4(*)
   test "analog/c33" on boards BoardSet_boards_4_to_4(*)
   test "analog/c34" on boards BoardSet_boards_4_to_4(*)
   test "analog/c35" on boards BoardSet_boards_4_to_4(*)
   test "analog/r11" on boards BoardSet_boards_4_to_4(*)
   test "analog/r12" on boards BoardSet_boards_4_to_4(*)
   test "analog/r485" on boards BoardSet_boards_4_to_4(*)
   call Update_Status (Status_Code, All_Failed)
subend

sub TestJet (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

   if Message$ <> "" then  print tab(5);Message$
   call Panel_Enable_Boards
   test "testjet" on boards BoardSet_boards_1_to_1(*)
   test "testjet" on boards BoardSet_boards_2_to_2(*)
   test "testjet" on boards BoardSet_boards_3_to_3(*)
   test "testjet" on boards BoardSet_boards_4_to_4(*)
   call Update_Status (Status_Code, All_Failed)
subend

sub Polarity_Check (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call Update_Status (Status_Code, All_Failed)
subend

sub Connect_Check (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call Update_Status (Status_Code, All_Failed)
subend

sub Analog_Cluster_Tests (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call Update_Status (Status_Code, All_Failed)
subend

sub Disconnect_Power_On_Board(Board_Num)
global BoardSet(*)

   ! Check to see if in powered mode.
   Must_Be_Powered = 223
   rps 2, V, C, Error
   if Error = Must_Be_Powered then subexit

   if (Board_Num = 1) and BoardSet(1) then
      ! Disconnect this board
      dps 2
   end if
   if (Board_Num = 2) and BoardSet(2) then
   end if
   if (Board_Num = 3) and BoardSet(3) then
   end if
   if (Board_Num = 4) and BoardSet(4) then
   end if
subend

sub Report_Power_Supply_Limit(Pslimit)
   I = 1
   for Pscount = 1 to 2
      if binand (Pslimit,I) then
         report "Power Supply Number "
         report Pscount
         report "In Current Limit"
      end if
      I = 2*I
   next Pscount
   report "________________________________________"
   report "Check for backwards"
   report "IC's or Capacitors."
   report "________________________________________"
subend

sub Setup_Power_Supplies (Status_Code, Message$)
global All_Failed
global BoardSet(*)

   if Message$ <> "" then  print tab(5);Message$
   cps
   if BoardSet(1) then
      board number is 1
      sps 2,19.00,2.00;optimize
      Pslimit = pslimit
      pass device
      if Pslimit then
         dps 2
         fail device
         call Report_Power_Supply_Limit(Pslimit)
      end if
   end if
   call Update_Status (Status_Code, All_Failed)
subend

sub Cycle_Power_On_Boards
global BoardSet(*)
   sps 2,-0.00,0.00;optimize ! Setting supply output to zero
   if BoardSet(1) then
      sps 2,19.00,2.00;optimize
   end if
subend

sub BScan_Powered_Shorts_Tests (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call Update_Status (Status_Code, All_Failed)
subend

sub BScan_Interconnect_Tests (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call Update_Status (Status_Code, All_Failed)
subend

sub BScan_Incircuit_Tests (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call Update_Status (Status_Code, All_Failed)
subend

sub BScan_Silicon_Nails_Tests (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call Update_Status (Status_Code, All_Failed)
subend

sub Digital_Tests (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

   if Message$ <> "" then  print tab(5);Message$
   call Panel_Enable_Boards
   test "digital/pq3%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/pq5%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/pq7%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/pq8%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/pq44%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/pq46%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/pq49%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/pq51%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/pq53%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/pq67%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/pq72%np_d21" on boards BoardSet_boards_1_to_1(*)
!   test "digital/pq94%np_d21" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "digital/pq99%np_d21" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "digital/pu10" on boards BoardSet_boards_1_to_1(*)
   test "digital/pu52" on boards BoardSet_boards_1_to_1(*)
   test "digital/q6%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/q10%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/q19%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/q21%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/q23%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/q25%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/q28%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/q29%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/q31%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/q35%np_d21" on boards BoardSet_boards_1_to_1(*)
   test "digital/q38%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/q39%func" on boards BoardSet_boards_1_to_1(*)
!   test "digital/q40%func" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "digital/q42%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/q43%func" on boards BoardSet_boards_1_to_1(*)
!   test "digital/q45%func" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "digital/q50%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/q54%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/q62%np_d21" on boards BoardSet_boards_1_to_1(*)
!   test "digital/q68%func" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "digital/u1" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "digital/u2" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "digital/u4" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "digital/u5" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "digital/u11" on boards BoardSet_boards_1_to_1(*)
   test "digital/u12" on boards BoardSet_boards_1_to_1(*)
!   test "digital/u18" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "digital/u19" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "digital/u20" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "digital/u22%func" on boards BoardSet_boards_1_to_1(*)
!   test "digital/u28%func" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "digital/u30%func" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "digital/u32%func" on boards BoardSet_boards_1_to_1(*)
   test "digital/u37%func" on boards BoardSet_boards_1_to_1(*)
!   test "digital/u43" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "digital/u47" on boards BoardSet_boards_1_to_1(*)
!   test "digital/u49" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
!   test "digital/u53" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "digital/u66" on boards BoardSet_boards_1_to_1(*)
   test "digital/u69" on boards BoardSet_boards_1_to_1(*)
   test "digital/u75" on boards BoardSet_boards_1_to_1(*)
!   test "digital/u90" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
 ! Safeguard Inhibited - An Upstream Device Is Non-Digital
   test "digital/pq100073%np_d21" on boards BoardSet_boards_1_to_1(*)
 ! Safeguard Inhibited - An Upstream Device Is Non-Digital
   test "digital/pq100074%np_d21" on boards BoardSet_boards_1_to_1(*)
 ! Safeguard Inhibited - An Upstream Device Is Non-Digital
!   test "digital/u3" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
 ! Safeguard Inhibited - An Upstream Device Is Non-Digital
!   test "digital/u25" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
 ! Safeguard Inhibited - An Upstream Device Is Non-Digital
   test "digital/u27" on boards BoardSet_boards_1_to_1(*)
 ! Safeguard Inhibited - An Upstream Device Is Non-Digital
!   test "digital/u65" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
 ! Safeguard Inhibited - An Upstream Device Is Non-Digital
   test "digital/u80" on boards BoardSet_boards_1_to_1(*)
 ! Safeguard Inhibited - An Upstream Device Is Non-Digital
   test "digital/u88" on boards BoardSet_boards_1_to_1(*)
   call Update_Status (Status_Code, All_Failed)
subend

sub Functional_Tests (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call Update_Status (Status_Code, All_Failed)
subend

sub Analog_Functional_Tests (Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

   if Message$ <> "" then  print tab(5);Message$
   call Panel_Enable_Boards
   test "analog/pq14" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq95%np_ad231" on boards BoardSet_boards_1_to_1(*)
   test "analog/pq10073" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu7" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu9" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu41" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu46" on boards BoardSet_boards_1_to_1(*)
   test "analog/pu50" on boards BoardSet_boards_1_to_1(*)
!   test "analog/pu83" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/q26%a41" on boards BoardSet_boards_1_to_1(*)
   test "analog/q26%a46" on boards BoardSet_boards_1_to_1(*)
   test "analog/q26%ad416" on boards BoardSet_boards_1_to_1(*)
   test "analog/q26%ad461" on boards BoardSet_boards_1_to_1(*)
   test "analog/q32%a41" on boards BoardSet_boards_1_to_1(*)
   test "analog/q32%a46" on boards BoardSet_boards_1_to_1(*)
   test "analog/q32%ad416" on boards BoardSet_boards_1_to_1(*)
   test "analog/q32%ad461" on boards BoardSet_boards_1_to_1(*)
   test "analog/q37%np_ad213" on boards BoardSet_boards_1_to_1(*)
   test "analog/q41%np_ad213" on boards BoardSet_boards_1_to_1(*)
   test "analog/q66%np_ad213" on boards BoardSet_boards_1_to_1(*)
   test "analog/u15" on boards BoardSet_boards_1_to_1(*)
!   test "analog/u17" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/u21%a41" on boards BoardSet_boards_1_to_1(*)
   test "analog/u21%a46" on boards BoardSet_boards_1_to_1(*)
   test "analog/u21%ad416" on boards BoardSet_boards_1_to_1(*)
   test "analog/u21%ad461" on boards BoardSet_boards_1_to_1(*)
   test "analog/u23" on boards BoardSet_boards_1_to_1(*)
   test "analog/u24%a41" on boards BoardSet_boards_1_to_1(*)
   test "analog/u24%a46" on boards BoardSet_boards_1_to_1(*)
   test "analog/u24%ad416" on boards BoardSet_boards_1_to_1(*)
   test "analog/u24%ad461" on boards BoardSet_boards_1_to_1(*)
   test "analog/u33" on boards BoardSet_boards_1_to_1(*)
   test "analog/u34%a41" on boards BoardSet_boards_1_to_1(*)
   test "analog/u34%a46" on boards BoardSet_boards_1_to_1(*)
   test "analog/u34%ad416" on boards BoardSet_boards_1_to_1(*)
   test "analog/u34%ad461" on boards BoardSet_boards_1_to_1(*)
   test "analog/u35%a41" on boards BoardSet_boards_1_to_1(*)
   test "analog/u35%a46" on boards BoardSet_boards_1_to_1(*)
   test "analog/u35%ad416" on boards BoardSet_boards_1_to_1(*)
   test "analog/u35%ad461" on boards BoardSet_boards_1_to_1(*)
   test "analog/u40%a41" on boards BoardSet_boards_1_to_1(*)
   test "analog/u40%a46" on boards BoardSet_boards_1_to_1(*)
   test "analog/u40%ad416" on boards BoardSet_boards_1_to_1(*)
   test "analog/u40%ad461" on boards BoardSet_boards_1_to_1(*)
   test "analog/u62" on boards BoardSet_boards_1_to_1(*)
   test "analog/u86" on boards BoardSet_boards_1_to_1(*)
   test "analog/u89" on boards BoardSet_boards_1_to_1(*)
   test "analog/x1" on boards BoardSet_boards_1_to_1(*)
   test "analog/x2" on boards BoardSet_boards_1_to_1(*)
   test "analog/x3" on boards BoardSet_boards_1_to_1(*)
!   test "analog/x4" on boards BoardSet_boards_1_to_1(*)  ! test commented in testorder
   test "analog/x5" on boards BoardSet_boards_1_to_1(*)
   test "analog/x6" on boards BoardSet_boards_1_to_1(*)
   test "mixed/u48" on boards BoardSet_boards_1_to_1(*)
   test "analog/u1" on boards BoardSet_boards_2_to_2(*)
   call Update_Status (Status_Code, All_Failed)
subend

sub Program_Flash (Device$, Status_Code, Message$)
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)
global Number_Boards_On_Panel, BoardSet(*), BoardSet_flash(*)
global Report_level$, Logging

  if Device$ = "" then  subexit
  if Message$ <> "" then  print tab(5);Message$
  call Panel_Enable_Boards

  ! Verify Manufacturer ID and device ID codes.
  ! The ID test should be executed in digital for ICT purposes.
  test "digital/" & Device$ & "%id" on boards BoardSet_boards_1_to_1(*)
  test "digital/" & Device$ & "%id" on boards BoardSet_boards_2_to_2(*)
  test "digital/" & Device$ & "%id" on boards BoardSet_boards_3_to_3(*)
  test "digital/" & Device$ & "%id" on boards BoardSet_boards_4_to_4(*)
  if fnFlash_Boards_Failed then
    for I = 1 to Number_Boards_On_Panel
      if BoardSet_flash(I) then
        board number is I
        if dutfailed then
          print using "14x,k,k,#"; Device$ & " on board", I
          print ": Device ID failed"
        end if
      end if
    next I
    call Update_Status (Status_Code, All_Failed)
    subexit ! if the wrong device is installed, exit the program subroutine
  end if

  !remove reporting and logging while verifying device status
  Report_level$ = rli$
  report level is none
  if Logging then
    log level is none
  end if
  print tab(8); "Verifying Status"
  safeguard none  !flash! This board meets design for On-Board Programming
                  !       criteria for safeguard none to be safe
                  !       Programming runs very slowly with safeguard on

  !flash! Comment the appropriate crc test(s) in Digital_Tests subroutine
  test "digital/" & Device$ & "%crc" on boards BoardSet_boards_1_to_1(*)
  test "digital/" & Device$ & "%crc" on boards BoardSet_boards_2_to_2(*)
  test "digital/" & Device$ & "%crc" on boards BoardSet_boards_3_to_3(*)
  test "digital/" & Device$ & "%crc" on boards BoardSet_boards_4_to_4(*)
  All_passed = True
  if fnFlash_Boards_Failed then
    for I = 1 to Number_Boards_On_Panel
      if BoardSet_flash(I) then
        board number is I
        if not dutfailed then
          print using "14x,k,k,#"; Device$ & " on board", I
          print ": Pre-programmed"
          call Flash_Disable_Single_Board(I)
        else
          pass device
          print using "14x,k,k,#"; Device$ & " on board", I
          print Device$; " : Contains incorrect data"
          All_passed = False
        end if
      end if
    next I
  end if

  if All_passed then
    print tab(15); "All devices pre-programmed"
    call Panel_Enable_Boards
    call Cleanup_Flash
    call Update_Status (Status_Code, All_Failed)
    subexit  ! the device is already properly programmed, exit subroutine
  end if

  ! Verify device is blank.
  !flash! Comment the appropriate blank test(s) in Digital_Tests subroutine
  test "digital/" & Device$ & "%blank" on boards BoardSet_boards_1_to_1(*)
  test "digital/" & Device$ & "%blank" on boards BoardSet_boards_2_to_2(*)
  test "digital/" & Device$ & "%blank" on boards BoardSet_boards_3_to_3(*)
  test "digital/" & Device$ & "%blank" on boards BoardSet_boards_4_to_4(*)
  All_passed = True
  if fnFlash_Boards_Failed then
    for I = 1 to Number_Boards_On_Panel
      if BoardSet_flash(I) then
        board number is I
        if dutfailed then
        ! Uncomment the next 2 lines to display individual blank status
        !flash!   print using "14x,k,k,#"; Device$ & " on board", I
        !flash!   print ": Not blank"
          pass device
          All_passed = False
        else
          call Panel_Disable_Single_Board(I)
        end if
      end if
    next I
    if not All_passed then
      print tab(8); "Erasing"
      !flash! call Setup_Power_Supplies_Program  ! add any necessary programming
                                                 ! voltages to a new subroutine
      !flash! Comment the appropriate erase test(s) in Digital_Tests subroutine
      test "digital/" & Device$ & "%erase" on boards BoardSet_boards_1_to_1(*)
      test "digital/" & Device$ & "%erase" on boards BoardSet_boards_2_to_2(*)
      test "digital/" & Device$ & "%erase" on boards BoardSet_boards_3_to_3(*)
      test "digital/" & Device$ & "%erase" on boards BoardSet_boards_4_to_4(*)
      if not fnFlash_Boards_Failed then
        print tab(8); "Erase complete"
      end if
    end if
  end if
  ! Some older devices may need two erase sequences. If erase fails
  ! twice on only one board, continue to program all. The final CRC
  ! check will determine the viability of the erase program sequence

  if fnFlash_Boards_Failed then
    for I = 1 to Number_Boards_On_Panel
      if BoardSet_flash(I) then
        board number is I
        if dutfailed then
          pass device
          print using "14x,k,k,#"; Device$ & " on board", I
          print ": Needed to be erased twice"
        else
          call Panel_Disable_Single_Board(I)
        end if
      end if
    next I
    test "digital/" & Device$ & "%erase" on boards BoardSet_boards_1_to_1(*)
    test "digital/" & Device$ & "%erase" on boards BoardSet_boards_2_to_2(*)
    test "digital/" & Device$ & "%erase" on boards BoardSet_boards_3_to_3(*)
    test "digital/" & Device$ & "%erase" on boards BoardSet_boards_4_to_4(*)
    All_failed = True
    for I = 1 to Number_Boards_On_Panel
      if BoardSet_flash(I) then
        board number is I
        if dutfailed then
          print using "14x,k,k,#"; Device$ & " on board", I
          print ": Erase Failed"
          call Flash_Disable_Single_Board(I)
        else
          All_failed = False
        end if
      end if
    next I
    if All_failed then
      call Panel_Enable_Boards
      call Cleanup_Flash   !flash! move above erase test if full report
                           !       of failing erase tests is desired
      print "All boards failed erase"
      call Update_Status (Status_Code, All_Failed)
      subexit   ! if the device cannot be erased
    else
      for I = 1 to Number_Boards_On_Panel
        if BoardSet_flash(I) then
          board number is I
          pass device
        end if
      next I
    end if          !if dutfailed second erase
    print tab(8); "Erase complete"
  end if            !if dutfailed first erase
  call Flash_Enable_Boards
  print tab(8); "Programming"
  A=msec
  !flash! Comment the appropriate program test(s) in Digital_Tests subroutine
  test "digital/" & Device$ & "%program" on boards BoardSet_boards_1_to_1(*)
  test "digital/" & Device$ & "%program" on boards BoardSet_boards_2_to_2(*)
  test "digital/" & Device$ & "%program" on boards BoardSet_boards_3_to_3(*)
  test "digital/" & Device$ & "%program" on boards BoardSet_boards_4_to_4(*)
  B = (msec-A)/1000
  if not fnFlash_Boards_Failed then
    print tab(15); "Programming complete in"; B;" seconds"
  else
    print tab(15); "Programming Failed"
  end if
  if fnFlash_Boards_Failed then
    for I = 1 to Number_Boards_On_Panel
      if BoardSet_flash(I) then
        board number is I
        print using "14x,k,k,#"; Device$ & " on board", I
        if dutfailed then
          print ": Programming Failed"
          pass device
        else
          print ": Programming Complete"
        end if
      end if
    next I
  end if

  !flash! Hold_panel = panelfailed
  !flash! call Setup_Power_Supplies (Failed_In_Power_Supplies, PowerMsg$)
  !flash! if Hold_panel < panelfailed then
  !flash!   for I = 1 to Number_Boards_On_Panel
  !flash!     if BoardSet(I) then
  !flash!       board number is I
  !flash!       if dutfailed then
  !flash!         print "Power supplies limited on board"; I
  !flash!       end if
  !flash!     end if
  !flash!   next I
  !flash!   call Panel_Enable_Boards
  !flash!   call Cleanup_Flash
  !flash!   call Update_Status (Status_Code, All_Failed)
  !flash!   subexit
  !flash! end if
  call Cleanup_Flash  !flash! move above program test for full reporting
  print tab(8); "Verifying Data"
  !flash! Comment the appropriate crc test(s) in Digital_Tests subroutine
  test "digital/" & Device$ & "%crc" on boards BoardSet_boards_1_to_1(*)
  test "digital/" & Device$ & "%crc" on boards BoardSet_boards_2_to_2(*)
  test "digital/" & Device$ & "%crc" on boards BoardSet_boards_3_to_3(*)
  test "digital/" & Device$ & "%crc" on boards BoardSet_boards_4_to_4(*)
  if fnFlash_Boards_Failed then
    for I = 1 to Number_Boards_On_Panel
      if BoardSet_flash(I) then
        board number is I
        print using "14x,k,k,#"; Device$ & " on board", I
        if dutfailed then
          print ": Contains incorrect data"
        else
          print ": Contains correct data"
        end if
      end if
    next I
  end if
  call Panel_Enable_Boards
  call Update_Status (Status_Code, All_Failed)
subend

def fnPinsfailed (Message$)
global BoardSet(*)
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

   if Message$ <> "" then  print tab(5);Message$
   call Panel_Enable_Boards
   Pins_failed_flag = 0
   test "pins" on boards BoardSet_boards_1_to_1(*)
   for Board_Num = 1 to 1
      board number is Board_Num
      if BoardSet(Board_Num) and dutfailed then Pins_failed_flag = 1
   next Board_Num
   test "pins" on boards BoardSet_boards_2_to_2(*)
   for Board_Num = 2 to 2
      board number is Board_Num
      if BoardSet(Board_Num) and dutfailed then Pins_failed_flag = 1
   next Board_Num
   test "pins" on boards BoardSet_boards_3_to_3(*)
   for Board_Num = 3 to 3
      board number is Board_Num
      if BoardSet(Board_Num) and dutfailed then Pins_failed_flag = 1
   next Board_Num
   test "pins" on boards BoardSet_boards_4_to_4(*)
   for Board_Num = 4 to 4
      board number is Board_Num
      if BoardSet(Board_Num) and dutfailed then Pins_failed_flag = 1
   next Board_Num
   return Pins_failed_flag
fnend

def fnFlash_Boards_Failed
global Number_Boards_On_Panel, BoardSet_flash(*)

  Flash_failed_flag = 0
  for I = 1 to Number_Boards_On_Panel
    board number is I
    if BoardSet_flash(I) and dutfailed then
      Flash_failed_flag = 1
    end if
  next I
  return Flash_failed_flag
fnend

sub ScanWorks_Setup
! CAUTION:  Within this subroutine, do NOT use testhead statements
! CAUTION:  with the exception of the following statements:
! CAUTION:  testhead cleanup, test scanworks, scanworks reset.
! CAUTION:  Failure to follow this guideline can result in damage
! CAUTION:  to the BSI card.
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

   call Panel_Enable_Boards
   testhead cleanup
subend

sub ScanWorks_Pretest
! CAUTION:  Within this subroutine, do NOT use testhead statements
! CAUTION:  with the exception of the following statements:
! CAUTION:  testhead cleanup, test scanworks, scanworks reset.
! CAUTION:  Failure to follow this guideline can result in damage
! CAUTION:  to the BSI card.
global All_Failed, Failed_In_SW_Testing
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   call Panel_Enable_Boards
!   call ScanWorks_Setup
!   call ScanWorks_Cleanup
!   call Update_Status (Failed_In_SW_Testing, All_Failed)
subend

sub ScanWorks_Cleanup
! CAUTION:  Within this subroutine, do NOT use testhead statements
! CAUTION:  with the exception of the following statements:
! CAUTION:  testhead cleanup, test scanworks, scanworks reset.
! CAUTION:  Failure to follow this guideline can result in damage
! CAUTION:  to the BSI card.
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

   call Panel_Enable_Boards
   scanworks reset
subend

sub ScanWorks_Scan_Path_Verify_Tests (Status_Code, Message$)
! CAUTION:  Within this subroutine, do NOT use testhead statements
! CAUTION:  with the exception of the following statements:
! CAUTION:  testhead cleanup, test scanworks, scanworks reset.
! CAUTION:  Failure to follow this guideline can result in damage
! CAUTION:  to the BSI card.
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call ScanWorks_Setup
!   call ScanWorks_Cleanup
!   call Update_Status (Status_Code, All_Failed)
subend

sub ScanWorks_Interconnect_Tests (Status_Code, Message$)
! CAUTION:  Within this subroutine, do NOT use testhead statements
! CAUTION:  with the exception of the following statements:
! CAUTION:  testhead cleanup, test scanworks, scanworks reset.
! CAUTION:  Failure to follow this guideline can result in damage
! CAUTION:  to the BSI card.
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call ScanWorks_Setup
!   call ScanWorks_Cleanup
!   call Update_Status (Status_Code, All_Failed)
subend

sub ScanWorks_Mem_Interconnect_Tests (Status_Code, Message$)
! CAUTION:  Within this subroutine, do NOT use testhead statements
! CAUTION:  with the exception of the following statements:
! CAUTION:  testhead cleanup, test scanworks, scanworks reset.
! CAUTION:  Failure to follow this guideline can result in damage
! CAUTION:  to the BSI card.
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call ScanWorks_Setup
!   call ScanWorks_Cleanup
!   call Update_Status (Status_Code, All_Failed)
subend

sub ScanWorks_Cluster_Tests (Status_Code, Message$)
! CAUTION:  Within this subroutine, do NOT use testhead statements
! CAUTION:  with the exception of the following statements:
! CAUTION:  testhead cleanup, test scanworks, scanworks reset.
! CAUTION:  Failure to follow this guideline can result in damage
! CAUTION:  to the BSI card.
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call ScanWorks_Setup
!   call ScanWorks_Cleanup
!   call Update_Status (Status_Code, All_Failed)
subend

sub ScanWorks_Mem_BIST (Status_Code, Message$)
! CAUTION:  Within this subroutine, do NOT use testhead statements
! CAUTION:  with the exception of the following statements:
! CAUTION:  testhead cleanup, test scanworks, scanworks reset.
! CAUTION:  Failure to follow this guideline can result in damage
! CAUTION:  to the BSI card.
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call ScanWorks_Setup
!   call ScanWorks_Cleanup
!   call Update_Status (Status_Code, All_Failed)
subend

sub ScanWorks_Device_Programming (Status_Code, Message$)
! CAUTION:  Within this subroutine, do NOT use testhead statements
! CAUTION:  with the exception of the following statements:
! CAUTION:  testhead cleanup, test scanworks, scanworks reset.
! CAUTION:  Failure to follow this guideline can result in damage
! CAUTION:  to the BSI card.
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call ScanWorks_Setup
!   call ScanWorks_Cleanup
!   call Update_Status (Status_Code, All_Failed)
subend

sub ScanWorks_Flash_Programming (Status_Code, Message$)
! CAUTION:  Within this subroutine, do NOT use testhead statements
! CAUTION:  with the exception of the following statements:
! CAUTION:  testhead cleanup, test scanworks, scanworks reset.
! CAUTION:  Failure to follow this guideline can result in damage
! CAUTION:  to the BSI card.
global All_Failed
global BoardSet_boards_1_to_1(*)
global BoardSet_boards_2_to_2(*)
global BoardSet_boards_3_to_3(*)
global BoardSet_boards_4_to_4(*)

!   if Message$ <> "" then  print tab(5);Message$
!   call Panel_Enable_Boards
!   call ScanWorks_Setup
!   call ScanWorks_Cleanup
!   call Update_Status (Status_Code, All_Failed)
subend

! End of Testplan Writer Generated Testplan.

